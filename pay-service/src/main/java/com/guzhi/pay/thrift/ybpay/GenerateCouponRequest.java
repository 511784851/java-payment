/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.guzhi.pay.thrift.gbpay;

import java.util.ArrayList;
import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.thrift.TBase;
import org.apache.thrift.TBaseHelper;
import org.apache.thrift.TException;
import org.apache.thrift.TFieldIdEnum;
import org.apache.thrift.TFieldRequirementType;
import org.apache.thrift.meta_data.FieldMetaData;
import org.apache.thrift.meta_data.FieldValueMetaData;
import org.apache.thrift.meta_data.ListMetaData;
import org.apache.thrift.meta_data.StructMetaData;
import org.apache.thrift.protocol.TField;
import org.apache.thrift.protocol.TList;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.protocol.TProtocolUtil;
import org.apache.thrift.protocol.TStruct;
import org.apache.thrift.protocol.TType;

/**
 * 生成优惠券/折扣券/代金券的请求
 * 2013/3/8 新增
 */
public class GenerateCouponRequest implements TBase<GenerateCouponRequest, GenerateCouponRequest._Fields>,
        java.io.Serializable, Cloneable {
    private static final TStruct STRUCT_DESC = new TStruct("GenerateCouponRequest");

    private static final TField PAYER_PRODUCT_FIELD_DESC = new TField("payerProduct", TType.STRING, (short) 1);
    private static final TField REQUEST_ID_FIELD_DESC = new TField("requestId", TType.STRING, (short) 2);
    private static final TField BATCH_ID_FIELD_DESC = new TField("batchId", TType.STRING, (short) 3);
    private static final TField CLASSIFICATION_FIELD_DESC = new TField("classification", TType.I32, (short) 4);
    private static final TField DETAILS_FIELD_DESC = new TField("details", TType.LIST, (short) 5);
    private static final TField SIGN_FIELD_DESC = new TField("sign", TType.STRING, (short) 6);
    private static final TField ACTIVITY_START_TIME_FIELD_DESC = new TField("activityStartTime", TType.STRING,
            (short) 7);
    private static final TField ACTIVITY_END_TIME_FIELD_DESC = new TField("activityEndTime", TType.STRING, (short) 8);
    private static final TField ORIGIN_ID_FIELD_DESC = new TField("originId", TType.STRING, (short) 9);
    private static final TField PRODUCT_CONFINE_FIELD_DESC = new TField("productConfine", TType.LIST, (short) 10);
    private static final TField USE_END_TIME_FIELD_DESC = new TField("useEndTime", TType.STRING, (short) 11);
    private static final TField gbUID_FIELD_DESC = new TField("gbuid", TType.I64, (short) 12);
    private static final TField COUPON_TYPE_FIELD_DESC = new TField("couponType", TType.I32, (short) 13);

    /**
     * 用于生成优惠券付款的productId
     */
    public String payerProduct;
    /**
     * 本次请求的订单ID
     */
    public String requestId;
    /**
     * 这批券的批次ID
     */
    public String batchId;
    /**
     * 券的类型
     */
    public int classification;
    /**
     * 需要生成的优惠券的面额和数量，每次生成的总数量不能超过500
     */
    public List<CouponFaceValue> details;
    /**
     * HMacSha1
     */
    public String sign;
    /**
     * 有效期开始时间 gbgb-MM-dd，大于等于
     */
    public String activityStartTime;
    /**
     * 有效期结束时间 gbgb-MM-dd，小于等于
     */
    public String activityEndTime;
    /**
     * 来源ID，比如gb充值中心是：gbCZZX
     */
    public String originId;
    /**
     * 限制哪些游戏使用，可选参数
     */
    public List<String> productConfine;
    /**
     * 使用到期时间 gbgb-MM-dd
     */
    public String useEndTime;
    /**
     * 激活者的gbuid，可选参数
     */
    public long gbuid;
    /**
     * 特指优惠券的类型（兼容旧设置），可选参数
     */
    public int couponType;

    /**
     * The set of fields this struct contains, along with convenience methods
     * for finding and manipulating them.
     */
    public enum _Fields implements TFieldIdEnum {
        /**
         * 用于生成优惠券付款的productId
         */
        PAYER_PRODUCT((short) 1, "payerProduct"),
        /**
         * 本次请求的订单ID
         */
        REQUEST_ID((short) 2, "requestId"),
        /**
         * 这批券的批次ID
         */
        BATCH_ID((short) 3, "batchId"),
        /**
         * 券的类型
         */
        CLASSIFICATION((short) 4, "classification"),
        /**
         * 需要生成的优惠券的面额和数量，每次生成的总数量不能超过500
         */
        DETAILS((short) 5, "details"),
        /**
         * HMacSha1
         */
        SIGN((short) 6, "sign"),
        /**
         * 有效期开始时间 gbgb-MM-dd，大于等于
         */
        ACTIVITY_START_TIME((short) 7, "activityStartTime"),
        /**
         * 有效期结束时间 gbgb-MM-dd，小于等于
         */
        ACTIVITY_END_TIME((short) 8, "activityEndTime"),
        /**
         * 来源ID，比如gb充值中心是：gbCZZX
         */
        ORIGIN_ID((short) 9, "originId"),
        /**
         * 限制哪些游戏使用，可选参数
         */
        PRODUCT_CONFINE((short) 10, "productConfine"),
        /**
         * 使用到期时间 gbgb-MM-dd
         */
        USE_END_TIME((short) 11, "useEndTime"),
        /**
         * 激活者的gbuid，可选参数
         */
        gbUID((short) 12, "gbuid"),
        /**
         * 特指优惠券的类型（兼容旧设置），可选参数
         */
        COUPON_TYPE((short) 13, "couponType");

        private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

        static {
            for (_Fields field : EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not
         * found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
            case 1: // PAYER_PRODUCT
                return PAYER_PRODUCT;
            case 2: // REQUEST_ID
                return REQUEST_ID;
            case 3: // BATCH_ID
                return BATCH_ID;
            case 4: // CLASSIFICATION
                return CLASSIFICATION;
            case 5: // DETAILS
                return DETAILS;
            case 6: // SIGN
                return SIGN;
            case 7: // ACTIVITY_START_TIME
                return ACTIVITY_START_TIME;
            case 8: // ACTIVITY_END_TIME
                return ACTIVITY_END_TIME;
            case 9: // ORIGIN_ID
                return ORIGIN_ID;
            case 10: // PRODUCT_CONFINE
                return PRODUCT_CONFINE;
            case 11: // USE_END_TIME
                return USE_END_TIME;
            case 12: // gbUID
                return gbUID;
            case 13: // COUPON_TYPE
                return COUPON_TYPE;
            default:
                return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null)
                throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not
         * found.
         */
        public static _Fields findByName(String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final String _fieldName;

        _Fields(short thriftId, String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __CLASSIFICATION_ISSET_ID = 0;
    private static final int __gbUID_ISSET_ID = 1;
    private static final int __COUPONTYPE_ISSET_ID = 2;
    private BitSet __isset_bit_vector = new BitSet(3);

    public static final Map<_Fields, FieldMetaData> metaDataMap;
    static {
        Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.PAYER_PRODUCT, new FieldMetaData("payerProduct", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.REQUEST_ID, new FieldMetaData("requestId", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.BATCH_ID, new FieldMetaData("batchId", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.CLASSIFICATION, new FieldMetaData("classification", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.I32)));
        tmpMap.put(_Fields.DETAILS, new FieldMetaData("details", TFieldRequirementType.REQUIRED, new ListMetaData(
                TType.LIST, new StructMetaData(TType.STRUCT, CouponFaceValue.class))));
        tmpMap.put(_Fields.SIGN, new FieldMetaData("sign", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.ACTIVITY_START_TIME, new FieldMetaData("activityStartTime", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.ACTIVITY_END_TIME, new FieldMetaData("activityEndTime", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.ORIGIN_ID, new FieldMetaData("originId", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.PRODUCT_CONFINE, new FieldMetaData("productConfine", TFieldRequirementType.OPTIONAL,
                new ListMetaData(TType.LIST, new FieldValueMetaData(TType.STRING))));
        tmpMap.put(_Fields.USE_END_TIME, new FieldMetaData("useEndTime", TFieldRequirementType.OPTIONAL,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.gbUID, new FieldMetaData("gbuid", TFieldRequirementType.OPTIONAL, new FieldValueMetaData(
                TType.I64)));
        tmpMap.put(_Fields.COUPON_TYPE, new FieldMetaData("couponType", TFieldRequirementType.OPTIONAL,
                new FieldValueMetaData(TType.I32)));
        metaDataMap = Collections.unmodifiableMap(tmpMap);
        FieldMetaData.addStructMetaDataMap(GenerateCouponRequest.class, metaDataMap);
    }

    public GenerateCouponRequest() {
        this.gbuid = 0L;

        this.couponType = 1;

    }

    public GenerateCouponRequest(String payerProduct, String requestId, String batchId, int classification,
            List<CouponFaceValue> details, String sign, String activityStartTime, String activityEndTime,
            String originId) {
        this();
        this.payerProduct = payerProduct;
        this.requestId = requestId;
        this.batchId = batchId;
        this.classification = classification;
        setClassificationIsSet(true);
        this.details = details;
        this.sign = sign;
        this.activityStartTime = activityStartTime;
        this.activityEndTime = activityEndTime;
        this.originId = originId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GenerateCouponRequest(GenerateCouponRequest other) {
        __isset_bit_vector.clear();
        __isset_bit_vector.or(other.__isset_bit_vector);
        if (other.isSetPayerProduct()) {
            this.payerProduct = other.payerProduct;
        }
        if (other.isSetRequestId()) {
            this.requestId = other.requestId;
        }
        if (other.isSetBatchId()) {
            this.batchId = other.batchId;
        }
        this.classification = other.classification;
        if (other.isSetDetails()) {
            List<CouponFaceValue> __this__details = new ArrayList<CouponFaceValue>();
            for (CouponFaceValue other_element : other.details) {
                __this__details.add(new CouponFaceValue(other_element));
            }
            this.details = __this__details;
        }
        if (other.isSetSign()) {
            this.sign = other.sign;
        }
        if (other.isSetActivityStartTime()) {
            this.activityStartTime = other.activityStartTime;
        }
        if (other.isSetActivityEndTime()) {
            this.activityEndTime = other.activityEndTime;
        }
        if (other.isSetOriginId()) {
            this.originId = other.originId;
        }
        if (other.isSetProductConfine()) {
            List<String> __this__productConfine = new ArrayList<String>();
            for (String other_element : other.productConfine) {
                __this__productConfine.add(other_element);
            }
            this.productConfine = __this__productConfine;
        }
        if (other.isSetUseEndTime()) {
            this.useEndTime = other.useEndTime;
        }
        this.gbuid = other.gbuid;
        this.couponType = other.couponType;
    }

    public GenerateCouponRequest deepCopy() {
        return new GenerateCouponRequest(this);
    }

    @Override
    public void clear() {
        this.payerProduct = null;
        this.requestId = null;
        this.batchId = null;
        setClassificationIsSet(false);
        this.classification = 0;
        this.details = null;
        this.sign = null;
        this.activityStartTime = null;
        this.activityEndTime = null;
        this.originId = null;
        this.productConfine = null;
        this.useEndTime = null;
        this.gbuid = 0L;

        this.couponType = 1;

    }

    /**
     * 用于生成优惠券付款的productId
     */
    public String getPayerProduct() {
        return this.payerProduct;
    }

    /**
     * 用于生成优惠券付款的productId
     */
    public GenerateCouponRequest setPayerProduct(String payerProduct) {
        this.payerProduct = payerProduct;
        return this;
    }

    public void unsetPayerProduct() {
        this.payerProduct = null;
    }

    /**
     * Returns true if field payerProduct is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetPayerProduct() {
        return this.payerProduct != null;
    }

    public void setPayerProductIsSet(boolean value) {
        if (!value) {
            this.payerProduct = null;
        }
    }

    /**
     * 本次请求的订单ID
     */
    public String getRequestId() {
        return this.requestId;
    }

    /**
     * 本次请求的订单ID
     */
    public GenerateCouponRequest setRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    public void unsetRequestId() {
        this.requestId = null;
    }

    /**
     * Returns true if field requestId is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetRequestId() {
        return this.requestId != null;
    }

    public void setRequestIdIsSet(boolean value) {
        if (!value) {
            this.requestId = null;
        }
    }

    /**
     * 这批券的批次ID
     */
    public String getBatchId() {
        return this.batchId;
    }

    /**
     * 这批券的批次ID
     */
    public GenerateCouponRequest setBatchId(String batchId) {
        this.batchId = batchId;
        return this;
    }

    public void unsetBatchId() {
        this.batchId = null;
    }

    /**
     * Returns true if field batchId is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetBatchId() {
        return this.batchId != null;
    }

    public void setBatchIdIsSet(boolean value) {
        if (!value) {
            this.batchId = null;
        }
    }

    /**
     * 券的类型
     */
    public int getClassification() {
        return this.classification;
    }

    /**
     * 券的类型
     */
    public GenerateCouponRequest setClassification(int classification) {
        this.classification = classification;
        setClassificationIsSet(true);
        return this;
    }

    public void unsetClassification() {
        __isset_bit_vector.clear(__CLASSIFICATION_ISSET_ID);
    }

    /**
     * Returns true if field classification is set (has been asigned a value)
     * and false otherwise
     */
    public boolean isSetClassification() {
        return __isset_bit_vector.get(__CLASSIFICATION_ISSET_ID);
    }

    public void setClassificationIsSet(boolean value) {
        __isset_bit_vector.set(__CLASSIFICATION_ISSET_ID, value);
    }

    public int getDetailsSize() {
        return (this.details == null) ? 0 : this.details.size();
    }

    public java.util.Iterator<CouponFaceValue> getDetailsIterator() {
        return (this.details == null) ? null : this.details.iterator();
    }

    public void addToDetails(CouponFaceValue elem) {
        if (this.details == null) {
            this.details = new ArrayList<CouponFaceValue>();
        }
        this.details.add(elem);
    }

    /**
     * 需要生成的优惠券的面额和数量，每次生成的总数量不能超过500
     */
    public List<CouponFaceValue> getDetails() {
        return this.details;
    }

    /**
     * 需要生成的优惠券的面额和数量，每次生成的总数量不能超过500
     */
    public GenerateCouponRequest setDetails(List<CouponFaceValue> details) {
        this.details = details;
        return this;
    }

    public void unsetDetails() {
        this.details = null;
    }

    /**
     * Returns true if field details is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetDetails() {
        return this.details != null;
    }

    public void setDetailsIsSet(boolean value) {
        if (!value) {
            this.details = null;
        }
    }

    /**
     * HMacSha1
     */
    public String getSign() {
        return this.sign;
    }

    /**
     * HMacSha1
     */
    public GenerateCouponRequest setSign(String sign) {
        this.sign = sign;
        return this;
    }

    public void unsetSign() {
        this.sign = null;
    }

    /**
     * Returns true if field sign is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetSign() {
        return this.sign != null;
    }

    public void setSignIsSet(boolean value) {
        if (!value) {
            this.sign = null;
        }
    }

    /**
     * 有效期开始时间 gbgb-MM-dd，大于等于
     */
    public String getActivityStartTime() {
        return this.activityStartTime;
    }

    /**
     * 有效期开始时间 gbgb-MM-dd，大于等于
     */
    public GenerateCouponRequest setActivityStartTime(String activityStartTime) {
        this.activityStartTime = activityStartTime;
        return this;
    }

    public void unsetActivityStartTime() {
        this.activityStartTime = null;
    }

    /**
     * Returns true if field activityStartTime is set (has been asigned a value)
     * and false otherwise
     */
    public boolean isSetActivityStartTime() {
        return this.activityStartTime != null;
    }

    public void setActivityStartTimeIsSet(boolean value) {
        if (!value) {
            this.activityStartTime = null;
        }
    }

    /**
     * 有效期结束时间 gbgb-MM-dd，小于等于
     */
    public String getActivityEndTime() {
        return this.activityEndTime;
    }

    /**
     * 有效期结束时间 gbgb-MM-dd，小于等于
     */
    public GenerateCouponRequest setActivityEndTime(String activityEndTime) {
        this.activityEndTime = activityEndTime;
        return this;
    }

    public void unsetActivityEndTime() {
        this.activityEndTime = null;
    }

    /**
     * Returns true if field activityEndTime is set (has been asigned a value)
     * and false otherwise
     */
    public boolean isSetActivityEndTime() {
        return this.activityEndTime != null;
    }

    public void setActivityEndTimeIsSet(boolean value) {
        if (!value) {
            this.activityEndTime = null;
        }
    }

    /**
     * 来源ID，比如gb充值中心是：gbCZZX
     */
    public String getOriginId() {
        return this.originId;
    }

    /**
     * 来源ID，比如gb充值中心是：gbCZZX
     */
    public GenerateCouponRequest setOriginId(String originId) {
        this.originId = originId;
        return this;
    }

    public void unsetOriginId() {
        this.originId = null;
    }

    /**
     * Returns true if field originId is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetOriginId() {
        return this.originId != null;
    }

    public void setOriginIdIsSet(boolean value) {
        if (!value) {
            this.originId = null;
        }
    }

    public int getProductConfineSize() {
        return (this.productConfine == null) ? 0 : this.productConfine.size();
    }

    public java.util.Iterator<String> getProductConfineIterator() {
        return (this.productConfine == null) ? null : this.productConfine.iterator();
    }

    public void addToProductConfine(String elem) {
        if (this.productConfine == null) {
            this.productConfine = new ArrayList<String>();
        }
        this.productConfine.add(elem);
    }

    /**
     * 限制哪些游戏使用，可选参数
     */
    public List<String> getProductConfine() {
        return this.productConfine;
    }

    /**
     * 限制哪些游戏使用，可选参数
     */
    public GenerateCouponRequest setProductConfine(List<String> productConfine) {
        this.productConfine = productConfine;
        return this;
    }

    public void unsetProductConfine() {
        this.productConfine = null;
    }

    /**
     * Returns true if field productConfine is set (has been asigned a value)
     * and false otherwise
     */
    public boolean isSetProductConfine() {
        return this.productConfine != null;
    }

    public void setProductConfineIsSet(boolean value) {
        if (!value) {
            this.productConfine = null;
        }
    }

    /**
     * 使用到期时间 gbgb-MM-dd
     */
    public String getUseEndTime() {
        return this.useEndTime;
    }

    /**
     * 使用到期时间 gbgb-MM-dd
     */
    public GenerateCouponRequest setUseEndTime(String useEndTime) {
        this.useEndTime = useEndTime;
        return this;
    }

    public void unsetUseEndTime() {
        this.useEndTime = null;
    }

    /**
     * Returns true if field useEndTime is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetUseEndTime() {
        return this.useEndTime != null;
    }

    public void setUseEndTimeIsSet(boolean value) {
        if (!value) {
            this.useEndTime = null;
        }
    }

    /**
     * 激活者的gbuid，可选参数
     */
    public long getgbuid() {
        return this.gbuid;
    }

    /**
     * 激活者的gbuid，可选参数
     */
    public GenerateCouponRequest setgbuid(long gbuid) {
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        return this;
    }

    public void unsetgbuid() {
        __isset_bit_vector.clear(__gbUID_ISSET_ID);
    }

    /**
     * Returns true if field gbuid is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetgbuid() {
        return __isset_bit_vector.get(__gbUID_ISSET_ID);
    }

    public void setgbuidIsSet(boolean value) {
        __isset_bit_vector.set(__gbUID_ISSET_ID, value);
    }

    /**
     * 特指优惠券的类型（兼容旧设置），可选参数
     */
    public int getCouponType() {
        return this.couponType;
    }

    /**
     * 特指优惠券的类型（兼容旧设置），可选参数
     */
    public GenerateCouponRequest setCouponType(int couponType) {
        this.couponType = couponType;
        setCouponTypeIsSet(true);
        return this;
    }

    public void unsetCouponType() {
        __isset_bit_vector.clear(__COUPONTYPE_ISSET_ID);
    }

    /**
     * Returns true if field couponType is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetCouponType() {
        return __isset_bit_vector.get(__COUPONTYPE_ISSET_ID);
    }

    public void setCouponTypeIsSet(boolean value) {
        __isset_bit_vector.set(__COUPONTYPE_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
        switch (field) {
        case PAYER_PRODUCT:
            if (value == null) {
                unsetPayerProduct();
            } else {
                setPayerProduct((String) value);
            }
            break;

        case REQUEST_ID:
            if (value == null) {
                unsetRequestId();
            } else {
                setRequestId((String) value);
            }
            break;

        case BATCH_ID:
            if (value == null) {
                unsetBatchId();
            } else {
                setBatchId((String) value);
            }
            break;

        case CLASSIFICATION:
            if (value == null) {
                unsetClassification();
            } else {
                setClassification((Integer) value);
            }
            break;

        case DETAILS:
            if (value == null) {
                unsetDetails();
            } else {
                setDetails((List<CouponFaceValue>) value);
            }
            break;

        case SIGN:
            if (value == null) {
                unsetSign();
            } else {
                setSign((String) value);
            }
            break;

        case ACTIVITY_START_TIME:
            if (value == null) {
                unsetActivityStartTime();
            } else {
                setActivityStartTime((String) value);
            }
            break;

        case ACTIVITY_END_TIME:
            if (value == null) {
                unsetActivityEndTime();
            } else {
                setActivityEndTime((String) value);
            }
            break;

        case ORIGIN_ID:
            if (value == null) {
                unsetOriginId();
            } else {
                setOriginId((String) value);
            }
            break;

        case PRODUCT_CONFINE:
            if (value == null) {
                unsetProductConfine();
            } else {
                setProductConfine((List<String>) value);
            }
            break;

        case USE_END_TIME:
            if (value == null) {
                unsetUseEndTime();
            } else {
                setUseEndTime((String) value);
            }
            break;

        case gbUID:
            if (value == null) {
                unsetgbuid();
            } else {
                setgbuid((Long) value);
            }
            break;

        case COUPON_TYPE:
            if (value == null) {
                unsetCouponType();
            } else {
                setCouponType((Integer) value);
            }
            break;

        }
    }

    public Object getFieldValue(_Fields field) {
        switch (field) {
        case PAYER_PRODUCT:
            return getPayerProduct();

        case REQUEST_ID:
            return getRequestId();

        case BATCH_ID:
            return getBatchId();

        case CLASSIFICATION:
            return new Integer(getClassification());

        case DETAILS:
            return getDetails();

        case SIGN:
            return getSign();

        case ACTIVITY_START_TIME:
            return getActivityStartTime();

        case ACTIVITY_END_TIME:
            return getActivityEndTime();

        case ORIGIN_ID:
            return getOriginId();

        case PRODUCT_CONFINE:
            return getProductConfine();

        case USE_END_TIME:
            return getUseEndTime();

        case gbUID:
            return new Long(getgbuid());

        case COUPON_TYPE:
            return new Integer(getCouponType());

        }
        throw new IllegalStateException();
    }

    /**
     * Returns true if field corresponding to fieldID is set (has been asigned a
     * value) and false otherwise
     */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new IllegalArgumentException();
        }

        switch (field) {
        case PAYER_PRODUCT:
            return isSetPayerProduct();
        case REQUEST_ID:
            return isSetRequestId();
        case BATCH_ID:
            return isSetBatchId();
        case CLASSIFICATION:
            return isSetClassification();
        case DETAILS:
            return isSetDetails();
        case SIGN:
            return isSetSign();
        case ACTIVITY_START_TIME:
            return isSetActivityStartTime();
        case ACTIVITY_END_TIME:
            return isSetActivityEndTime();
        case ORIGIN_ID:
            return isSetOriginId();
        case PRODUCT_CONFINE:
            return isSetProductConfine();
        case USE_END_TIME:
            return isSetUseEndTime();
        case gbUID:
            return isSetgbuid();
        case COUPON_TYPE:
            return isSetCouponType();
        }
        throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
        if (that == null)
            return false;
        if (that instanceof GenerateCouponRequest)
            return this.equals((GenerateCouponRequest) that);
        return false;
    }

    public boolean equals(GenerateCouponRequest that) {
        if (that == null)
            return false;

        boolean this_present_payerProduct = true && this.isSetPayerProduct();
        boolean that_present_payerProduct = true && that.isSetPayerProduct();
        if (this_present_payerProduct || that_present_payerProduct) {
            if (!(this_present_payerProduct && that_present_payerProduct))
                return false;
            if (!this.payerProduct.equals(that.payerProduct))
                return false;
        }

        boolean this_present_requestId = true && this.isSetRequestId();
        boolean that_present_requestId = true && that.isSetRequestId();
        if (this_present_requestId || that_present_requestId) {
            if (!(this_present_requestId && that_present_requestId))
                return false;
            if (!this.requestId.equals(that.requestId))
                return false;
        }

        boolean this_present_batchId = true && this.isSetBatchId();
        boolean that_present_batchId = true && that.isSetBatchId();
        if (this_present_batchId || that_present_batchId) {
            if (!(this_present_batchId && that_present_batchId))
                return false;
            if (!this.batchId.equals(that.batchId))
                return false;
        }

        boolean this_present_classification = true;
        boolean that_present_classification = true;
        if (this_present_classification || that_present_classification) {
            if (!(this_present_classification && that_present_classification))
                return false;
            if (this.classification != that.classification)
                return false;
        }

        boolean this_present_details = true && this.isSetDetails();
        boolean that_present_details = true && that.isSetDetails();
        if (this_present_details || that_present_details) {
            if (!(this_present_details && that_present_details))
                return false;
            if (!this.details.equals(that.details))
                return false;
        }

        boolean this_present_sign = true && this.isSetSign();
        boolean that_present_sign = true && that.isSetSign();
        if (this_present_sign || that_present_sign) {
            if (!(this_present_sign && that_present_sign))
                return false;
            if (!this.sign.equals(that.sign))
                return false;
        }

        boolean this_present_activityStartTime = true && this.isSetActivityStartTime();
        boolean that_present_activityStartTime = true && that.isSetActivityStartTime();
        if (this_present_activityStartTime || that_present_activityStartTime) {
            if (!(this_present_activityStartTime && that_present_activityStartTime))
                return false;
            if (!this.activityStartTime.equals(that.activityStartTime))
                return false;
        }

        boolean this_present_activityEndTime = true && this.isSetActivityEndTime();
        boolean that_present_activityEndTime = true && that.isSetActivityEndTime();
        if (this_present_activityEndTime || that_present_activityEndTime) {
            if (!(this_present_activityEndTime && that_present_activityEndTime))
                return false;
            if (!this.activityEndTime.equals(that.activityEndTime))
                return false;
        }

        boolean this_present_originId = true && this.isSetOriginId();
        boolean that_present_originId = true && that.isSetOriginId();
        if (this_present_originId || that_present_originId) {
            if (!(this_present_originId && that_present_originId))
                return false;
            if (!this.originId.equals(that.originId))
                return false;
        }

        boolean this_present_productConfine = true && this.isSetProductConfine();
        boolean that_present_productConfine = true && that.isSetProductConfine();
        if (this_present_productConfine || that_present_productConfine) {
            if (!(this_present_productConfine && that_present_productConfine))
                return false;
            if (!this.productConfine.equals(that.productConfine))
                return false;
        }

        boolean this_present_useEndTime = true && this.isSetUseEndTime();
        boolean that_present_useEndTime = true && that.isSetUseEndTime();
        if (this_present_useEndTime || that_present_useEndTime) {
            if (!(this_present_useEndTime && that_present_useEndTime))
                return false;
            if (!this.useEndTime.equals(that.useEndTime))
                return false;
        }

        boolean this_present_gbuid = true && this.isSetgbuid();
        boolean that_present_gbuid = true && that.isSetgbuid();
        if (this_present_gbuid || that_present_gbuid) {
            if (!(this_present_gbuid && that_present_gbuid))
                return false;
            if (this.gbuid != that.gbuid)
                return false;
        }

        boolean this_present_couponType = true && this.isSetCouponType();
        boolean that_present_couponType = true && that.isSetCouponType();
        if (this_present_couponType || that_present_couponType) {
            if (!(this_present_couponType && that_present_couponType))
                return false;
            if (this.couponType != that.couponType)
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        return 0;
    }

    public int compareTo(GenerateCouponRequest other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;
        GenerateCouponRequest typedOther = (GenerateCouponRequest) other;

        lastComparison = Boolean.valueOf(isSetPayerProduct()).compareTo(typedOther.isSetPayerProduct());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetPayerProduct()) {
            lastComparison = TBaseHelper.compareTo(this.payerProduct, typedOther.payerProduct);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetRequestId()).compareTo(typedOther.isSetRequestId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetRequestId()) {
            lastComparison = TBaseHelper.compareTo(this.requestId, typedOther.requestId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetBatchId()).compareTo(typedOther.isSetBatchId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetBatchId()) {
            lastComparison = TBaseHelper.compareTo(this.batchId, typedOther.batchId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetClassification()).compareTo(typedOther.isSetClassification());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetClassification()) {
            lastComparison = TBaseHelper.compareTo(this.classification, typedOther.classification);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetDetails()).compareTo(typedOther.isSetDetails());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDetails()) {
            lastComparison = TBaseHelper.compareTo(this.details, typedOther.details);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetSign()).compareTo(typedOther.isSetSign());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSign()) {
            lastComparison = TBaseHelper.compareTo(this.sign, typedOther.sign);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetActivityStartTime()).compareTo(typedOther.isSetActivityStartTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetActivityStartTime()) {
            lastComparison = TBaseHelper.compareTo(this.activityStartTime, typedOther.activityStartTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetActivityEndTime()).compareTo(typedOther.isSetActivityEndTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetActivityEndTime()) {
            lastComparison = TBaseHelper.compareTo(this.activityEndTime, typedOther.activityEndTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetOriginId()).compareTo(typedOther.isSetOriginId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetOriginId()) {
            lastComparison = TBaseHelper.compareTo(this.originId, typedOther.originId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetProductConfine()).compareTo(typedOther.isSetProductConfine());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetProductConfine()) {
            lastComparison = TBaseHelper.compareTo(this.productConfine, typedOther.productConfine);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetUseEndTime()).compareTo(typedOther.isSetUseEndTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUseEndTime()) {
            lastComparison = TBaseHelper.compareTo(this.useEndTime, typedOther.useEndTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetgbuid()).compareTo(typedOther.isSetgbuid());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetgbuid()) {
            lastComparison = TBaseHelper.compareTo(this.gbuid, typedOther.gbuid);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetCouponType()).compareTo(typedOther.isSetCouponType());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCouponType()) {
            lastComparison = TBaseHelper.compareTo(this.couponType, typedOther.couponType);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(TProtocol iprot) throws TException {
        TField field;
        iprot.readStructBegin();
        while (true) {
            field = iprot.readFieldBegin();
            if (field.type == TType.STOP) {
                break;
            }
            switch (field.id) {
            case 1: // PAYER_PRODUCT
                if (field.type == TType.STRING) {
                    this.payerProduct = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 2: // REQUEST_ID
                if (field.type == TType.STRING) {
                    this.requestId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 3: // BATCH_ID
                if (field.type == TType.STRING) {
                    this.batchId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 4: // CLASSIFICATION
                if (field.type == TType.I32) {
                    this.classification = iprot.readI32();
                    setClassificationIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 5: // DETAILS
                if (field.type == TType.LIST) {
                    {
                        TList _list0 = iprot.readListBegin();
                        this.details = new ArrayList<CouponFaceValue>(_list0.size);
                        for (int _i1 = 0; _i1 < _list0.size; ++_i1) {
                            CouponFaceValue _elem2;
                            _elem2 = new CouponFaceValue();
                            _elem2.read(iprot);
                            this.details.add(_elem2);
                        }
                        iprot.readListEnd();
                    }
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 6: // SIGN
                if (field.type == TType.STRING) {
                    this.sign = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 7: // ACTIVITY_START_TIME
                if (field.type == TType.STRING) {
                    this.activityStartTime = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 8: // ACTIVITY_END_TIME
                if (field.type == TType.STRING) {
                    this.activityEndTime = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 9: // ORIGIN_ID
                if (field.type == TType.STRING) {
                    this.originId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 10: // PRODUCT_CONFINE
                if (field.type == TType.LIST) {
                    {
                        TList _list3 = iprot.readListBegin();
                        this.productConfine = new ArrayList<String>(_list3.size);
                        for (int _i4 = 0; _i4 < _list3.size; ++_i4) {
                            String _elem5;
                            _elem5 = iprot.readString();
                            this.productConfine.add(_elem5);
                        }
                        iprot.readListEnd();
                    }
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 11: // USE_END_TIME
                if (field.type == TType.STRING) {
                    this.useEndTime = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 12: // gbUID
                if (field.type == TType.I64) {
                    this.gbuid = iprot.readI64();
                    setgbuidIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 13: // COUPON_TYPE
                if (field.type == TType.I32) {
                    this.couponType = iprot.readI32();
                    setCouponTypeIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            default:
                TProtocolUtil.skip(iprot, field.type);
            }
            iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked
        // in the validate method
        if (!isSetClassification()) {
            throw new TProtocolException("Required field 'classification' was not found in serialized data! Struct: "
                    + toString());
        }
        validate();
    }

    public void write(TProtocol oprot) throws TException {
        validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (this.payerProduct != null) {
            oprot.writeFieldBegin(PAYER_PRODUCT_FIELD_DESC);
            oprot.writeString(this.payerProduct);
            oprot.writeFieldEnd();
        }
        if (this.requestId != null) {
            oprot.writeFieldBegin(REQUEST_ID_FIELD_DESC);
            oprot.writeString(this.requestId);
            oprot.writeFieldEnd();
        }
        if (this.batchId != null) {
            oprot.writeFieldBegin(BATCH_ID_FIELD_DESC);
            oprot.writeString(this.batchId);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(CLASSIFICATION_FIELD_DESC);
        oprot.writeI32(this.classification);
        oprot.writeFieldEnd();
        if (this.details != null) {
            oprot.writeFieldBegin(DETAILS_FIELD_DESC);
            {
                oprot.writeListBegin(new TList(TType.STRUCT, this.details.size()));
                for (CouponFaceValue _iter6 : this.details) {
                    _iter6.write(oprot);
                }
                oprot.writeListEnd();
            }
            oprot.writeFieldEnd();
        }
        if (this.sign != null) {
            oprot.writeFieldBegin(SIGN_FIELD_DESC);
            oprot.writeString(this.sign);
            oprot.writeFieldEnd();
        }
        if (this.activityStartTime != null) {
            oprot.writeFieldBegin(ACTIVITY_START_TIME_FIELD_DESC);
            oprot.writeString(this.activityStartTime);
            oprot.writeFieldEnd();
        }
        if (this.activityEndTime != null) {
            oprot.writeFieldBegin(ACTIVITY_END_TIME_FIELD_DESC);
            oprot.writeString(this.activityEndTime);
            oprot.writeFieldEnd();
        }
        if (this.originId != null) {
            oprot.writeFieldBegin(ORIGIN_ID_FIELD_DESC);
            oprot.writeString(this.originId);
            oprot.writeFieldEnd();
        }
        if (this.productConfine != null) {
            if (isSetProductConfine()) {
                oprot.writeFieldBegin(PRODUCT_CONFINE_FIELD_DESC);
                {
                    oprot.writeListBegin(new TList(TType.STRING, this.productConfine.size()));
                    for (String _iter7 : this.productConfine) {
                        oprot.writeString(_iter7);
                    }
                    oprot.writeListEnd();
                }
                oprot.writeFieldEnd();
            }
        }
        if (this.useEndTime != null) {
            if (isSetUseEndTime()) {
                oprot.writeFieldBegin(USE_END_TIME_FIELD_DESC);
                oprot.writeString(this.useEndTime);
                oprot.writeFieldEnd();
            }
        }
        if (isSetgbuid()) {
            oprot.writeFieldBegin(gbUID_FIELD_DESC);
            oprot.writeI64(this.gbuid);
            oprot.writeFieldEnd();
        }
        if (isSetCouponType()) {
            oprot.writeFieldBegin(COUPON_TYPE_FIELD_DESC);
            oprot.writeI32(this.couponType);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GenerateCouponRequest(");
        boolean first = true;

        sb.append("payerProduct:");
        if (this.payerProduct == null) {
            sb.append("null");
        } else {
            sb.append(this.payerProduct);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("requestId:");
        if (this.requestId == null) {
            sb.append("null");
        } else {
            sb.append(this.requestId);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("batchId:");
        if (this.batchId == null) {
            sb.append("null");
        } else {
            sb.append(this.batchId);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("classification:");
        sb.append(this.classification);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("details:");
        if (this.details == null) {
            sb.append("null");
        } else {
            sb.append(this.details);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("sign:");
        if (this.sign == null) {
            sb.append("null");
        } else {
            sb.append(this.sign);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("activityStartTime:");
        if (this.activityStartTime == null) {
            sb.append("null");
        } else {
            sb.append(this.activityStartTime);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("activityEndTime:");
        if (this.activityEndTime == null) {
            sb.append("null");
        } else {
            sb.append(this.activityEndTime);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("originId:");
        if (this.originId == null) {
            sb.append("null");
        } else {
            sb.append(this.originId);
        }
        first = false;
        if (isSetProductConfine()) {
            if (!first)
                sb.append(", ");
            sb.append("productConfine:");
            if (this.productConfine == null) {
                sb.append("null");
            } else {
                sb.append(this.productConfine);
            }
            first = false;
        }
        if (isSetUseEndTime()) {
            if (!first)
                sb.append(", ");
            sb.append("useEndTime:");
            if (this.useEndTime == null) {
                sb.append("null");
            } else {
                sb.append(this.useEndTime);
            }
            first = false;
        }
        if (isSetgbuid()) {
            if (!first)
                sb.append(", ");
            sb.append("gbuid:");
            sb.append(this.gbuid);
            first = false;
        }
        if (isSetCouponType()) {
            if (!first)
                sb.append(", ");
            sb.append("couponType:");
            sb.append(this.couponType);
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws TException {
        // check for required fields
        if (payerProduct == null) {
            throw new TProtocolException("Required field 'payerProduct' was not present! Struct: " + toString());
        }
        if (requestId == null) {
            throw new TProtocolException("Required field 'requestId' was not present! Struct: " + toString());
        }
        if (batchId == null) {
            throw new TProtocolException("Required field 'batchId' was not present! Struct: " + toString());
        }
        // alas, we cannot check 'classification' because it's a primitive and
        // you chose the non-beans generator.
        if (details == null) {
            throw new TProtocolException("Required field 'details' was not present! Struct: " + toString());
        }
        if (sign == null) {
            throw new TProtocolException("Required field 'sign' was not present! Struct: " + toString());
        }
        if (activityStartTime == null) {
            throw new TProtocolException("Required field 'activityStartTime' was not present! Struct: " + toString());
        }
        if (activityEndTime == null) {
            throw new TProtocolException("Required field 'activityEndTime' was not present! Struct: " + toString());
        }
        if (originId == null) {
            throw new TProtocolException("Required field 'originId' was not present! Struct: " + toString());
        }
    }

}

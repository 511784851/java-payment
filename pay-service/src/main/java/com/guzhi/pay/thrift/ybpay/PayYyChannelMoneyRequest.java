/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.guzhi.pay.thrift.gbpay;

import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

import org.apache.thrift.TBase;
import org.apache.thrift.TBaseHelper;
import org.apache.thrift.TException;
import org.apache.thrift.TFieldIdEnum;
import org.apache.thrift.TFieldRequirementType;
import org.apache.thrift.meta_data.FieldMetaData;
import org.apache.thrift.meta_data.FieldValueMetaData;
import org.apache.thrift.protocol.TField;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.protocol.TProtocolUtil;
import org.apache.thrift.protocol.TStruct;
import org.apache.thrift.protocol.TType;

/**
 * 扣除频道虚拟货币的请求
 * 2013/10/30新增
 */
public class PagbyChannelMoneyRequest implements TBase<PagbyChannelMoneyRequest, PagbyChannelMoneyRequest._Fields>,
        java.io.Serializable, Cloneable {
    private static final TStruct STRUCT_DESC = new TStruct("PagbyChannelMoneyRequest");

    private static final TField gbUID_FIELD_DESC = new TField("gbuid", TType.I64, (short) 1);
    private static final TField gb_CHANNEL_ID_FIELD_DESC = new TField("gbChannelId", TType.I64, (short) 2);
    private static final TField ORDER_ID_FIELD_DESC = new TField("orderId", TType.STRING, (short) 3);
    private static final TField BALANCE_TYPE_FIELD_DESC = new TField("balanceType", TType.I32, (short) 4);
    private static final TField AMOUNT_FIELD_DESC = new TField("amount", TType.STRING, (short) 5);
    private static final TField APP_ID_FIELD_DESC = new TField("appId", TType.STRING, (short) 6);
    private static final TField TIMESTAMP_FIELD_DESC = new TField("timestamp", TType.I64, (short) 7);
    private static final TField USER_IP_FIELD_DESC = new TField("userIp", TType.STRING, (short) 8);
    private static final TField GOODS_NAME_FIELD_DESC = new TField("goodsName", TType.STRING, (short) 9);
    private static final TField DESCRIPTION_FIELD_DESC = new TField("description", TType.STRING, (short) 10);
    private static final TField CALLBACK_ADDR_FIELD_DESC = new TField("callbackAddr", TType.STRING, (short) 11);
    private static final TField SIGN_FIELD_DESC = new TField("sign", TType.STRING, (short) 12);

    /**
     * 被扣费用户的gbuid
     */
    public long gbuid;
    /**
     * 频道ID
     */
    public long gbChannelId;
    /**
     * 业务方订单号
     */
    public String orderId;
    /**
     * 货币类型
     */
    public int balanceType;
    /**
     * 扣除的金额，单位：元，最小单位：0.01元
     */
    public String amount;
    /**
     * 应用ID，比如gb音乐叫gbMUSIC
     */
    public String appId;
    /**
     * 时间戳，和充值系统的时间差不超过5分钟
     */
    public long timestamp;
    /**
     * 用户客户端IP
     */
    public String userIp;
    /**
     * 商品名称，最长50字符
     */
    public String goodsName;
    /**
     * 描述，最长100个字符
     */
    public String description;
    /**
     * 回调地址(格式"host:port")或http://，暂时可为空字符串
     */
    public String callbackAddr;
    /**
     * md5校验码
     */
    public String sign;

    /**
     * The set of fields this struct contains, along with convenience methods
     * for finding and manipulating them.
     */
    public enum _Fields implements TFieldIdEnum {
        /**
         * 被扣费用户的gbuid
         */
        gbUID((short) 1, "gbuid"),
        /**
         * 频道ID
         */
        gb_CHANNEL_ID((short) 2, "gbChannelId"),
        /**
         * 业务方订单号
         */
        ORDER_ID((short) 3, "orderId"),
        /**
         * 货币类型
         */
        BALANCE_TYPE((short) 4, "balanceType"),
        /**
         * 扣除的金额，单位：元，最小单位：0.01元
         */
        AMOUNT((short) 5, "amount"),
        /**
         * 应用ID，比如gb音乐叫gbMUSIC
         */
        APP_ID((short) 6, "appId"),
        /**
         * 时间戳，和充值系统的时间差不超过5分钟
         */
        TIMESTAMP((short) 7, "timestamp"),
        /**
         * 用户客户端IP
         */
        USER_IP((short) 8, "userIp"),
        /**
         * 商品名称，最长50字符
         */
        GOODS_NAME((short) 9, "goodsName"),
        /**
         * 描述，最长100个字符
         */
        DESCRIPTION((short) 10, "description"),
        /**
         * 回调地址(格式"host:port")或http://，暂时可为空字符串
         */
        CALLBACK_ADDR((short) 11, "callbackAddr"),
        /**
         * md5校验码
         */
        SIGN((short) 12, "sign");

        private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

        static {
            for (_Fields field : EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not
         * found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
            case 1: // gbUID
                return gbUID;
            case 2: // gb_CHANNEL_ID
                return gb_CHANNEL_ID;
            case 3: // ORDER_ID
                return ORDER_ID;
            case 4: // BALANCE_TYPE
                return BALANCE_TYPE;
            case 5: // AMOUNT
                return AMOUNT;
            case 6: // APP_ID
                return APP_ID;
            case 7: // TIMESTAMP
                return TIMESTAMP;
            case 8: // USER_IP
                return USER_IP;
            case 9: // GOODS_NAME
                return GOODS_NAME;
            case 10: // DESCRIPTION
                return DESCRIPTION;
            case 11: // CALLBACK_ADDR
                return CALLBACK_ADDR;
            case 12: // SIGN
                return SIGN;
            default:
                return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null)
                throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not
         * found.
         */
        public static _Fields findByName(String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final String _fieldName;

        _Fields(short thriftId, String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __gbUID_ISSET_ID = 0;
    private static final int __gbCHANNELID_ISSET_ID = 1;
    private static final int __BALANCETYPE_ISSET_ID = 2;
    private static final int __TIMESTAMP_ISSET_ID = 3;
    private BitSet __isset_bit_vector = new BitSet(4);

    public static final Map<_Fields, FieldMetaData> metaDataMap;
    static {
        Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.gbUID, new FieldMetaData("gbuid", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.I64)));
        tmpMap.put(_Fields.gb_CHANNEL_ID, new FieldMetaData("gbChannelId", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.I64)));
        tmpMap.put(_Fields.ORDER_ID, new FieldMetaData("orderId", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.BALANCE_TYPE, new FieldMetaData("balanceType", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.I32)));
        tmpMap.put(_Fields.AMOUNT, new FieldMetaData("amount", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.APP_ID, new FieldMetaData("appId", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.TIMESTAMP, new FieldMetaData("timestamp", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.I64)));
        tmpMap.put(_Fields.USER_IP, new FieldMetaData("userIp", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.GOODS_NAME, new FieldMetaData("goodsName", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.DESCRIPTION, new FieldMetaData("description", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.CALLBACK_ADDR, new FieldMetaData("callbackAddr", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.SIGN, new FieldMetaData("sign", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        metaDataMap = Collections.unmodifiableMap(tmpMap);
        FieldMetaData.addStructMetaDataMap(PagbyChannelMoneyRequest.class, metaDataMap);
    }

    public PagbyChannelMoneyRequest() {
    }

    public PagbyChannelMoneyRequest(long gbuid, long gbChannelId, String orderId, int balanceType, String amount,
            String appId, long timestamp, String userIp, String goodsName, String description, String callbackAddr,
            String sign) {
        this();
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        this.gbChannelId = gbChannelId;
        setgbChannelIdIsSet(true);
        this.orderId = orderId;
        this.balanceType = balanceType;
        setBalanceTypeIsSet(true);
        this.amount = amount;
        this.appId = appId;
        this.timestamp = timestamp;
        setTimestampIsSet(true);
        this.userIp = userIp;
        this.goodsName = goodsName;
        this.description = description;
        this.callbackAddr = callbackAddr;
        this.sign = sign;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PagbyChannelMoneyRequest(PagbyChannelMoneyRequest other) {
        __isset_bit_vector.clear();
        __isset_bit_vector.or(other.__isset_bit_vector);
        this.gbuid = other.gbuid;
        this.gbChannelId = other.gbChannelId;
        if (other.isSetOrderId()) {
            this.orderId = other.orderId;
        }
        this.balanceType = other.balanceType;
        if (other.isSetAmount()) {
            this.amount = other.amount;
        }
        if (other.isSetAppId()) {
            this.appId = other.appId;
        }
        this.timestamp = other.timestamp;
        if (other.isSetUserIp()) {
            this.userIp = other.userIp;
        }
        if (other.isSetGoodsName()) {
            this.goodsName = other.goodsName;
        }
        if (other.isSetDescription()) {
            this.description = other.description;
        }
        if (other.isSetCallbackAddr()) {
            this.callbackAddr = other.callbackAddr;
        }
        if (other.isSetSign()) {
            this.sign = other.sign;
        }
    }

    public PagbyChannelMoneyRequest deepCopy() {
        return new PagbyChannelMoneyRequest(this);
    }

    @Override
    public void clear() {
        setgbuidIsSet(false);
        this.gbuid = 0;
        setgbChannelIdIsSet(false);
        this.gbChannelId = 0;
        this.orderId = null;
        setBalanceTypeIsSet(false);
        this.balanceType = 0;
        this.amount = null;
        this.appId = null;
        setTimestampIsSet(false);
        this.timestamp = 0;
        this.userIp = null;
        this.goodsName = null;
        this.description = null;
        this.callbackAddr = null;
        this.sign = null;
    }

    /**
     * 被扣费用户的gbuid
     */
    public long getgbuid() {
        return this.gbuid;
    }

    /**
     * 被扣费用户的gbuid
     */
    public PagbyChannelMoneyRequest setgbuid(long gbuid) {
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        return this;
    }

    public void unsetgbuid() {
        __isset_bit_vector.clear(__gbUID_ISSET_ID);
    }

    /**
     * Returns true if field gbuid is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetgbuid() {
        return __isset_bit_vector.get(__gbUID_ISSET_ID);
    }

    public void setgbuidIsSet(boolean value) {
        __isset_bit_vector.set(__gbUID_ISSET_ID, value);
    }

    /**
     * 频道ID
     */
    public long getgbChannelId() {
        return this.gbChannelId;
    }

    /**
     * 频道ID
     */
    public PagbyChannelMoneyRequest setgbChannelId(long gbChannelId) {
        this.gbChannelId = gbChannelId;
        setgbChannelIdIsSet(true);
        return this;
    }

    public void unsetgbChannelId() {
        __isset_bit_vector.clear(__gbCHANNELID_ISSET_ID);
    }

    /**
     * Returns true if field gbChannelId is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetgbChannelId() {
        return __isset_bit_vector.get(__gbCHANNELID_ISSET_ID);
    }

    public void setgbChannelIdIsSet(boolean value) {
        __isset_bit_vector.set(__gbCHANNELID_ISSET_ID, value);
    }

    /**
     * 业务方订单号
     */
    public String getOrderId() {
        return this.orderId;
    }

    /**
     * 业务方订单号
     */
    public PagbyChannelMoneyRequest setOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }

    public void unsetOrderId() {
        this.orderId = null;
    }

    /**
     * Returns true if field orderId is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetOrderId() {
        return this.orderId != null;
    }

    public void setOrderIdIsSet(boolean value) {
        if (!value) {
            this.orderId = null;
        }
    }

    /**
     * 货币类型
     */
    public int getBalanceType() {
        return this.balanceType;
    }

    /**
     * 货币类型
     */
    public PagbyChannelMoneyRequest setBalanceType(int balanceType) {
        this.balanceType = balanceType;
        setBalanceTypeIsSet(true);
        return this;
    }

    public void unsetBalanceType() {
        __isset_bit_vector.clear(__BALANCETYPE_ISSET_ID);
    }

    /**
     * Returns true if field balanceType is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetBalanceType() {
        return __isset_bit_vector.get(__BALANCETYPE_ISSET_ID);
    }

    public void setBalanceTypeIsSet(boolean value) {
        __isset_bit_vector.set(__BALANCETYPE_ISSET_ID, value);
    }

    /**
     * 扣除的金额，单位：元，最小单位：0.01元
     */
    public String getAmount() {
        return this.amount;
    }

    /**
     * 扣除的金额，单位：元，最小单位：0.01元
     */
    public PagbyChannelMoneyRequest setAmount(String amount) {
        this.amount = amount;
        return this;
    }

    public void unsetAmount() {
        this.amount = null;
    }

    /**
     * Returns true if field amount is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetAmount() {
        return this.amount != null;
    }

    public void setAmountIsSet(boolean value) {
        if (!value) {
            this.amount = null;
        }
    }

    /**
     * 应用ID，比如gb音乐叫gbMUSIC
     */
    public String getAppId() {
        return this.appId;
    }

    /**
     * 应用ID，比如gb音乐叫gbMUSIC
     */
    public PagbyChannelMoneyRequest setAppId(String appId) {
        this.appId = appId;
        return this;
    }

    public void unsetAppId() {
        this.appId = null;
    }

    /**
     * Returns true if field appId is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetAppId() {
        return this.appId != null;
    }

    public void setAppIdIsSet(boolean value) {
        if (!value) {
            this.appId = null;
        }
    }

    /**
     * 时间戳，和充值系统的时间差不超过5分钟
     */
    public long getTimestamp() {
        return this.timestamp;
    }

    /**
     * 时间戳，和充值系统的时间差不超过5分钟
     */
    public PagbyChannelMoneyRequest setTimestamp(long timestamp) {
        this.timestamp = timestamp;
        setTimestampIsSet(true);
        return this;
    }

    public void unsetTimestamp() {
        __isset_bit_vector.clear(__TIMESTAMP_ISSET_ID);
    }

    /**
     * Returns true if field timestamp is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetTimestamp() {
        return __isset_bit_vector.get(__TIMESTAMP_ISSET_ID);
    }

    public void setTimestampIsSet(boolean value) {
        __isset_bit_vector.set(__TIMESTAMP_ISSET_ID, value);
    }

    /**
     * 用户客户端IP
     */
    public String getUserIp() {
        return this.userIp;
    }

    /**
     * 用户客户端IP
     */
    public PagbyChannelMoneyRequest setUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }

    public void unsetUserIp() {
        this.userIp = null;
    }

    /**
     * Returns true if field userIp is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetUserIp() {
        return this.userIp != null;
    }

    public void setUserIpIsSet(boolean value) {
        if (!value) {
            this.userIp = null;
        }
    }

    /**
     * 商品名称，最长50字符
     */
    public String getGoodsName() {
        return this.goodsName;
    }

    /**
     * 商品名称，最长50字符
     */
    public PagbyChannelMoneyRequest setGoodsName(String goodsName) {
        this.goodsName = goodsName;
        return this;
    }

    public void unsetGoodsName() {
        this.goodsName = null;
    }

    /**
     * Returns true if field goodsName is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetGoodsName() {
        return this.goodsName != null;
    }

    public void setGoodsNameIsSet(boolean value) {
        if (!value) {
            this.goodsName = null;
        }
    }

    /**
     * 描述，最长100个字符
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * 描述，最长100个字符
     */
    public PagbyChannelMoneyRequest setDescription(String description) {
        this.description = description;
        return this;
    }

    public void unsetDescription() {
        this.description = null;
    }

    /**
     * Returns true if field description is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetDescription() {
        return this.description != null;
    }

    public void setDescriptionIsSet(boolean value) {
        if (!value) {
            this.description = null;
        }
    }

    /**
     * 回调地址(格式"host:port")或http://，暂时可为空字符串
     */
    public String getCallbackAddr() {
        return this.callbackAddr;
    }

    /**
     * 回调地址(格式"host:port")或http://，暂时可为空字符串
     */
    public PagbyChannelMoneyRequest setCallbackAddr(String callbackAddr) {
        this.callbackAddr = callbackAddr;
        return this;
    }

    public void unsetCallbackAddr() {
        this.callbackAddr = null;
    }

    /**
     * Returns true if field callbackAddr is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetCallbackAddr() {
        return this.callbackAddr != null;
    }

    public void setCallbackAddrIsSet(boolean value) {
        if (!value) {
            this.callbackAddr = null;
        }
    }

    /**
     * md5校验码
     */
    public String getSign() {
        return this.sign;
    }

    /**
     * md5校验码
     */
    public PagbyChannelMoneyRequest setSign(String sign) {
        this.sign = sign;
        return this;
    }

    public void unsetSign() {
        this.sign = null;
    }

    /**
     * Returns true if field sign is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetSign() {
        return this.sign != null;
    }

    public void setSignIsSet(boolean value) {
        if (!value) {
            this.sign = null;
        }
    }

    public void setFieldValue(_Fields field, Object value) {
        switch (field) {
        case gbUID:
            if (value == null) {
                unsetgbuid();
            } else {
                setgbuid((Long) value);
            }
            break;

        case gb_CHANNEL_ID:
            if (value == null) {
                unsetgbChannelId();
            } else {
                setgbChannelId((Long) value);
            }
            break;

        case ORDER_ID:
            if (value == null) {
                unsetOrderId();
            } else {
                setOrderId((String) value);
            }
            break;

        case BALANCE_TYPE:
            if (value == null) {
                unsetBalanceType();
            } else {
                setBalanceType((Integer) value);
            }
            break;

        case AMOUNT:
            if (value == null) {
                unsetAmount();
            } else {
                setAmount((String) value);
            }
            break;

        case APP_ID:
            if (value == null) {
                unsetAppId();
            } else {
                setAppId((String) value);
            }
            break;

        case TIMESTAMP:
            if (value == null) {
                unsetTimestamp();
            } else {
                setTimestamp((Long) value);
            }
            break;

        case USER_IP:
            if (value == null) {
                unsetUserIp();
            } else {
                setUserIp((String) value);
            }
            break;

        case GOODS_NAME:
            if (value == null) {
                unsetGoodsName();
            } else {
                setGoodsName((String) value);
            }
            break;

        case DESCRIPTION:
            if (value == null) {
                unsetDescription();
            } else {
                setDescription((String) value);
            }
            break;

        case CALLBACK_ADDR:
            if (value == null) {
                unsetCallbackAddr();
            } else {
                setCallbackAddr((String) value);
            }
            break;

        case SIGN:
            if (value == null) {
                unsetSign();
            } else {
                setSign((String) value);
            }
            break;

        }
    }

    public Object getFieldValue(_Fields field) {
        switch (field) {
        case gbUID:
            return new Long(getgbuid());

        case gb_CHANNEL_ID:
            return new Long(getgbChannelId());

        case ORDER_ID:
            return getOrderId();

        case BALANCE_TYPE:
            return new Integer(getBalanceType());

        case AMOUNT:
            return getAmount();

        case APP_ID:
            return getAppId();

        case TIMESTAMP:
            return new Long(getTimestamp());

        case USER_IP:
            return getUserIp();

        case GOODS_NAME:
            return getGoodsName();

        case DESCRIPTION:
            return getDescription();

        case CALLBACK_ADDR:
            return getCallbackAddr();

        case SIGN:
            return getSign();

        }
        throw new IllegalStateException();
    }

    /**
     * Returns true if field corresponding to fieldID is set (has been asigned a
     * value) and false otherwise
     */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new IllegalArgumentException();
        }

        switch (field) {
        case gbUID:
            return isSetgbuid();
        case gb_CHANNEL_ID:
            return isSetgbChannelId();
        case ORDER_ID:
            return isSetOrderId();
        case BALANCE_TYPE:
            return isSetBalanceType();
        case AMOUNT:
            return isSetAmount();
        case APP_ID:
            return isSetAppId();
        case TIMESTAMP:
            return isSetTimestamp();
        case USER_IP:
            return isSetUserIp();
        case GOODS_NAME:
            return isSetGoodsName();
        case DESCRIPTION:
            return isSetDescription();
        case CALLBACK_ADDR:
            return isSetCallbackAddr();
        case SIGN:
            return isSetSign();
        }
        throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
        if (that == null)
            return false;
        if (that instanceof PagbyChannelMoneyRequest)
            return this.equals((PagbyChannelMoneyRequest) that);
        return false;
    }

    public boolean equals(PagbyChannelMoneyRequest that) {
        if (that == null)
            return false;

        boolean this_present_gbuid = true;
        boolean that_present_gbuid = true;
        if (this_present_gbuid || that_present_gbuid) {
            if (!(this_present_gbuid && that_present_gbuid))
                return false;
            if (this.gbuid != that.gbuid)
                return false;
        }

        boolean this_present_gbChannelId = true;
        boolean that_present_gbChannelId = true;
        if (this_present_gbChannelId || that_present_gbChannelId) {
            if (!(this_present_gbChannelId && that_present_gbChannelId))
                return false;
            if (this.gbChannelId != that.gbChannelId)
                return false;
        }

        boolean this_present_orderId = true && this.isSetOrderId();
        boolean that_present_orderId = true && that.isSetOrderId();
        if (this_present_orderId || that_present_orderId) {
            if (!(this_present_orderId && that_present_orderId))
                return false;
            if (!this.orderId.equals(that.orderId))
                return false;
        }

        boolean this_present_balanceType = true;
        boolean that_present_balanceType = true;
        if (this_present_balanceType || that_present_balanceType) {
            if (!(this_present_balanceType && that_present_balanceType))
                return false;
            if (this.balanceType != that.balanceType)
                return false;
        }

        boolean this_present_amount = true && this.isSetAmount();
        boolean that_present_amount = true && that.isSetAmount();
        if (this_present_amount || that_present_amount) {
            if (!(this_present_amount && that_present_amount))
                return false;
            if (!this.amount.equals(that.amount))
                return false;
        }

        boolean this_present_appId = true && this.isSetAppId();
        boolean that_present_appId = true && that.isSetAppId();
        if (this_present_appId || that_present_appId) {
            if (!(this_present_appId && that_present_appId))
                return false;
            if (!this.appId.equals(that.appId))
                return false;
        }

        boolean this_present_timestamp = true;
        boolean that_present_timestamp = true;
        if (this_present_timestamp || that_present_timestamp) {
            if (!(this_present_timestamp && that_present_timestamp))
                return false;
            if (this.timestamp != that.timestamp)
                return false;
        }

        boolean this_present_userIp = true && this.isSetUserIp();
        boolean that_present_userIp = true && that.isSetUserIp();
        if (this_present_userIp || that_present_userIp) {
            if (!(this_present_userIp && that_present_userIp))
                return false;
            if (!this.userIp.equals(that.userIp))
                return false;
        }

        boolean this_present_goodsName = true && this.isSetGoodsName();
        boolean that_present_goodsName = true && that.isSetGoodsName();
        if (this_present_goodsName || that_present_goodsName) {
            if (!(this_present_goodsName && that_present_goodsName))
                return false;
            if (!this.goodsName.equals(that.goodsName))
                return false;
        }

        boolean this_present_description = true && this.isSetDescription();
        boolean that_present_description = true && that.isSetDescription();
        if (this_present_description || that_present_description) {
            if (!(this_present_description && that_present_description))
                return false;
            if (!this.description.equals(that.description))
                return false;
        }

        boolean this_present_callbackAddr = true && this.isSetCallbackAddr();
        boolean that_present_callbackAddr = true && that.isSetCallbackAddr();
        if (this_present_callbackAddr || that_present_callbackAddr) {
            if (!(this_present_callbackAddr && that_present_callbackAddr))
                return false;
            if (!this.callbackAddr.equals(that.callbackAddr))
                return false;
        }

        boolean this_present_sign = true && this.isSetSign();
        boolean that_present_sign = true && that.isSetSign();
        if (this_present_sign || that_present_sign) {
            if (!(this_present_sign && that_present_sign))
                return false;
            if (!this.sign.equals(that.sign))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        return 0;
    }

    public int compareTo(PagbyChannelMoneyRequest other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;
        PagbyChannelMoneyRequest typedOther = (PagbyChannelMoneyRequest) other;

        lastComparison = Boolean.valueOf(isSetgbuid()).compareTo(typedOther.isSetgbuid());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetgbuid()) {
            lastComparison = TBaseHelper.compareTo(this.gbuid, typedOther.gbuid);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetgbChannelId()).compareTo(typedOther.isSetgbChannelId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetgbChannelId()) {
            lastComparison = TBaseHelper.compareTo(this.gbChannelId, typedOther.gbChannelId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(typedOther.isSetOrderId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetOrderId()) {
            lastComparison = TBaseHelper.compareTo(this.orderId, typedOther.orderId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetBalanceType()).compareTo(typedOther.isSetBalanceType());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetBalanceType()) {
            lastComparison = TBaseHelper.compareTo(this.balanceType, typedOther.balanceType);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAmount()) {
            lastComparison = TBaseHelper.compareTo(this.amount, typedOther.amount);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetAppId()).compareTo(typedOther.isSetAppId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAppId()) {
            lastComparison = TBaseHelper.compareTo(this.appId, typedOther.appId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetTimestamp()) {
            lastComparison = TBaseHelper.compareTo(this.timestamp, typedOther.timestamp);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetUserIp()).compareTo(typedOther.isSetUserIp());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUserIp()) {
            lastComparison = TBaseHelper.compareTo(this.userIp, typedOther.userIp);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetGoodsName()).compareTo(typedOther.isSetGoodsName());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetGoodsName()) {
            lastComparison = TBaseHelper.compareTo(this.goodsName, typedOther.goodsName);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDescription()) {
            lastComparison = TBaseHelper.compareTo(this.description, typedOther.description);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetCallbackAddr()).compareTo(typedOther.isSetCallbackAddr());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCallbackAddr()) {
            lastComparison = TBaseHelper.compareTo(this.callbackAddr, typedOther.callbackAddr);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetSign()).compareTo(typedOther.isSetSign());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSign()) {
            lastComparison = TBaseHelper.compareTo(this.sign, typedOther.sign);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(TProtocol iprot) throws TException {
        TField field;
        iprot.readStructBegin();
        while (true) {
            field = iprot.readFieldBegin();
            if (field.type == TType.STOP) {
                break;
            }
            switch (field.id) {
            case 1: // gbUID
                if (field.type == TType.I64) {
                    this.gbuid = iprot.readI64();
                    setgbuidIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 2: // gb_CHANNEL_ID
                if (field.type == TType.I64) {
                    this.gbChannelId = iprot.readI64();
                    setgbChannelIdIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 3: // ORDER_ID
                if (field.type == TType.STRING) {
                    this.orderId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 4: // BALANCE_TYPE
                if (field.type == TType.I32) {
                    this.balanceType = iprot.readI32();
                    setBalanceTypeIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 5: // AMOUNT
                if (field.type == TType.STRING) {
                    this.amount = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 6: // APP_ID
                if (field.type == TType.STRING) {
                    this.appId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 7: // TIMESTAMP
                if (field.type == TType.I64) {
                    this.timestamp = iprot.readI64();
                    setTimestampIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 8: // USER_IP
                if (field.type == TType.STRING) {
                    this.userIp = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 9: // GOODS_NAME
                if (field.type == TType.STRING) {
                    this.goodsName = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 10: // DESCRIPTION
                if (field.type == TType.STRING) {
                    this.description = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 11: // CALLBACK_ADDR
                if (field.type == TType.STRING) {
                    this.callbackAddr = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 12: // SIGN
                if (field.type == TType.STRING) {
                    this.sign = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            default:
                TProtocolUtil.skip(iprot, field.type);
            }
            iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked
        // in the validate method
        if (!isSetgbuid()) {
            throw new TProtocolException("Required field 'gbuid' was not found in serialized data! Struct: "
                    + toString());
        }
        if (!isSetgbChannelId()) {
            throw new TProtocolException("Required field 'gbChannelId' was not found in serialized data! Struct: "
                    + toString());
        }
        if (!isSetBalanceType()) {
            throw new TProtocolException("Required field 'balanceType' was not found in serialized data! Struct: "
                    + toString());
        }
        if (!isSetTimestamp()) {
            throw new TProtocolException("Required field 'timestamp' was not found in serialized data! Struct: "
                    + toString());
        }
        validate();
    }

    public void write(TProtocol oprot) throws TException {
        validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(gbUID_FIELD_DESC);
        oprot.writeI64(this.gbuid);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(gb_CHANNEL_ID_FIELD_DESC);
        oprot.writeI64(this.gbChannelId);
        oprot.writeFieldEnd();
        if (this.orderId != null) {
            oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
            oprot.writeString(this.orderId);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(BALANCE_TYPE_FIELD_DESC);
        oprot.writeI32(this.balanceType);
        oprot.writeFieldEnd();
        if (this.amount != null) {
            oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
            oprot.writeString(this.amount);
            oprot.writeFieldEnd();
        }
        if (this.appId != null) {
            oprot.writeFieldBegin(APP_ID_FIELD_DESC);
            oprot.writeString(this.appId);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
        oprot.writeI64(this.timestamp);
        oprot.writeFieldEnd();
        if (this.userIp != null) {
            oprot.writeFieldBegin(USER_IP_FIELD_DESC);
            oprot.writeString(this.userIp);
            oprot.writeFieldEnd();
        }
        if (this.goodsName != null) {
            oprot.writeFieldBegin(GOODS_NAME_FIELD_DESC);
            oprot.writeString(this.goodsName);
            oprot.writeFieldEnd();
        }
        if (this.description != null) {
            oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
            oprot.writeString(this.description);
            oprot.writeFieldEnd();
        }
        if (this.callbackAddr != null) {
            oprot.writeFieldBegin(CALLBACK_ADDR_FIELD_DESC);
            oprot.writeString(this.callbackAddr);
            oprot.writeFieldEnd();
        }
        if (this.sign != null) {
            oprot.writeFieldBegin(SIGN_FIELD_DESC);
            oprot.writeString(this.sign);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PagbyChannelMoneyRequest(");
        boolean first = true;

        sb.append("gbuid:");
        sb.append(this.gbuid);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("gbChannelId:");
        sb.append(this.gbChannelId);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("orderId:");
        if (this.orderId == null) {
            sb.append("null");
        } else {
            sb.append(this.orderId);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("balanceType:");
        sb.append(this.balanceType);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("amount:");
        if (this.amount == null) {
            sb.append("null");
        } else {
            sb.append(this.amount);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("appId:");
        if (this.appId == null) {
            sb.append("null");
        } else {
            sb.append(this.appId);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("timestamp:");
        sb.append(this.timestamp);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("userIp:");
        if (this.userIp == null) {
            sb.append("null");
        } else {
            sb.append(this.userIp);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("goodsName:");
        if (this.goodsName == null) {
            sb.append("null");
        } else {
            sb.append(this.goodsName);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("description:");
        if (this.description == null) {
            sb.append("null");
        } else {
            sb.append(this.description);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("callbackAddr:");
        if (this.callbackAddr == null) {
            sb.append("null");
        } else {
            sb.append(this.callbackAddr);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("sign:");
        if (this.sign == null) {
            sb.append("null");
        } else {
            sb.append(this.sign);
        }
        first = false;
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws TException {
        // check for required fields
        // alas, we cannot check 'gbuid' because it's a primitive and you chose
        // the non-beans generator.
        // alas, we cannot check 'gbChannelId' because it's a primitive and you
        // chose the non-beans generator.
        if (orderId == null) {
            throw new TProtocolException("Required field 'orderId' was not present! Struct: " + toString());
        }
        // alas, we cannot check 'balanceType' because it's a primitive and you
        // chose the non-beans generator.
        if (amount == null) {
            throw new TProtocolException("Required field 'amount' was not present! Struct: " + toString());
        }
        if (appId == null) {
            throw new TProtocolException("Required field 'appId' was not present! Struct: " + toString());
        }
        // alas, we cannot check 'timestamp' because it's a primitive and you
        // chose the non-beans generator.
        if (userIp == null) {
            throw new TProtocolException("Required field 'userIp' was not present! Struct: " + toString());
        }
        if (goodsName == null) {
            throw new TProtocolException("Required field 'goodsName' was not present! Struct: " + toString());
        }
        if (description == null) {
            throw new TProtocolException("Required field 'description' was not present! Struct: " + toString());
        }
        if (callbackAddr == null) {
            throw new TProtocolException("Required field 'callbackAddr' was not present! Struct: " + toString());
        }
        if (sign == null) {
            throw new TProtocolException("Required field 'sign' was not present! Struct: " + toString());
        }
    }

}

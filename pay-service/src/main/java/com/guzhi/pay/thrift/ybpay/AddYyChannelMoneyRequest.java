/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.guzhi.pay.thrift.gbpay;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

/**
 * 增加频道虚拟货币的请求
 * 2013/10/30新增
 */
public class AddgbChannelMoneyRequest implements TBase<AddgbChannelMoneyRequest, AddgbChannelMoneyRequest._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("AddgbChannelMoneyRequest");

  private static final TField gbUID_FIELD_DESC = new TField("gbuid", TType.I64, (short)1);
  private static final TField gb_CHANNEL_ID_FIELD_DESC = new TField("gbChannelId", TType.I64, (short)2);
  private static final TField ORDER_ID_FIELD_DESC = new TField("orderId", TType.STRING, (short)3);
  private static final TField BALANCE_TYPE_FIELD_DESC = new TField("balanceType", TType.I32, (short)4);
  private static final TField AMOUNT_FIELD_DESC = new TField("amount", TType.STRING, (short)5);
  private static final TField APP_ID_FIELD_DESC = new TField("appId", TType.STRING, (short)6);
  private static final TField CHANNEL_FIELD_DESC = new TField("channel", TType.STRING, (short)7);
  private static final TField USER_IP_FIELD_DESC = new TField("userIp", TType.STRING, (short)8);
  private static final TField TIMESTAMP_FIELD_DESC = new TField("timestamp", TType.I64, (short)9);
  private static final TField DESCRIPTION_FIELD_DESC = new TField("description", TType.STRING, (short)10);
  private static final TField QUERY_ORDER_ADDR_FIELD_DESC = new TField("queryOrderAddr", TType.STRING, (short)11);
  private static final TField SIGN_FIELD_DESC = new TField("sign", TType.STRING, (short)12);

  /**
   * 受益人gbuid
   */
  public long gbuid;
  /**
   * 频道ID
   */
  public long gbChannelId;
  /**
   * 订单号
   */
  public String orderId;
  /**
   * 货币类型
   */
  public int balanceType;
  /**
   * 增加的金额，单位：元，最小单位：0.01元
   */
  public String amount;
  /**
   * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
   */
  public String appId;
  /**
   * 充值渠道ID，比如alipay
   */
  public String channel;
  /**
   * 发生交易时，用户的IP
   */
  public String userIp;
  /**
   * 时间戳，和充值系统的时间差不超过5分钟
   */
  public long timestamp;
  /**
   * 描述，最长100个字符
   */
  public String description;
  /**
   * 查询原始订单的地址，规范见文档
   */
  public String queryOrderAddr;
  /**
   * 校验码，HMacSha1
   */
  public String sign;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    /**
     * 受益人gbuid
     */
    gbUID((short)1, "gbuid"),
    /**
     * 频道ID
     */
    gb_CHANNEL_ID((short)2, "gbChannelId"),
    /**
     * 订单号
     */
    ORDER_ID((short)3, "orderId"),
    /**
     * 货币类型
     */
    BALANCE_TYPE((short)4, "balanceType"),
    /**
     * 增加的金额，单位：元，最小单位：0.01元
     */
    AMOUNT((short)5, "amount"),
    /**
     * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
     */
    APP_ID((short)6, "appId"),
    /**
     * 充值渠道ID，比如alipay
     */
    CHANNEL((short)7, "channel"),
    /**
     * 发生交易时，用户的IP
     */
    USER_IP((short)8, "userIp"),
    /**
     * 时间戳，和充值系统的时间差不超过5分钟
     */
    TIMESTAMP((short)9, "timestamp"),
    /**
     * 描述，最长100个字符
     */
    DESCRIPTION((short)10, "description"),
    /**
     * 查询原始订单的地址，规范见文档
     */
    QUERY_ORDER_ADDR((short)11, "queryOrderAddr"),
    /**
     * 校验码，HMacSha1
     */
    SIGN((short)12, "sign");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // gbUID
          return gbUID;
        case 2: // gb_CHANNEL_ID
          return gb_CHANNEL_ID;
        case 3: // ORDER_ID
          return ORDER_ID;
        case 4: // BALANCE_TYPE
          return BALANCE_TYPE;
        case 5: // AMOUNT
          return AMOUNT;
        case 6: // APP_ID
          return APP_ID;
        case 7: // CHANNEL
          return CHANNEL;
        case 8: // USER_IP
          return USER_IP;
        case 9: // TIMESTAMP
          return TIMESTAMP;
        case 10: // DESCRIPTION
          return DESCRIPTION;
        case 11: // QUERY_ORDER_ADDR
          return QUERY_ORDER_ADDR;
        case 12: // SIGN
          return SIGN;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __gbUID_ISSET_ID = 0;
  private static final int __gbCHANNELID_ISSET_ID = 1;
  private static final int __BALANCETYPE_ISSET_ID = 2;
  private static final int __TIMESTAMP_ISSET_ID = 3;
  private BitSet __isset_bit_vector = new BitSet(4);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.gbUID, new FieldMetaData("gbuid", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.gb_CHANNEL_ID, new FieldMetaData("gbChannelId", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.ORDER_ID, new FieldMetaData("orderId", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.BALANCE_TYPE, new FieldMetaData("balanceType", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.AMOUNT, new FieldMetaData("amount", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.APP_ID, new FieldMetaData("appId", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CHANNEL, new FieldMetaData("channel", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.USER_IP, new FieldMetaData("userIp", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.TIMESTAMP, new FieldMetaData("timestamp", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.DESCRIPTION, new FieldMetaData("description", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.QUERY_ORDER_ADDR, new FieldMetaData("queryOrderAddr", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SIGN, new FieldMetaData("sign", TFieldRequirementType.REQUIRED, 
        new FieldValueMetaData(TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(AddgbChannelMoneyRequest.class, metaDataMap);
  }

  public AddgbChannelMoneyRequest() {
  }

  public AddgbChannelMoneyRequest(
    long gbuid,
    long gbChannelId,
    String orderId,
    int balanceType,
    String amount,
    String appId,
    String channel,
    String userIp,
    long timestamp,
    String description,
    String queryOrderAddr,
    String sign)
  {
    this();
    this.gbuid = gbuid;
    setgbuidIsSet(true);
    this.gbChannelId = gbChannelId;
    setgbChannelIdIsSet(true);
    this.orderId = orderId;
    this.balanceType = balanceType;
    setBalanceTypeIsSet(true);
    this.amount = amount;
    this.appId = appId;
    this.channel = channel;
    this.userIp = userIp;
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    this.description = description;
    this.queryOrderAddr = queryOrderAddr;
    this.sign = sign;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AddgbChannelMoneyRequest(AddgbChannelMoneyRequest other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.gbuid = other.gbuid;
    this.gbChannelId = other.gbChannelId;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    this.balanceType = other.balanceType;
    if (other.isSetAmount()) {
      this.amount = other.amount;
    }
    if (other.isSetAppId()) {
      this.appId = other.appId;
    }
    if (other.isSetChannel()) {
      this.channel = other.channel;
    }
    if (other.isSetUserIp()) {
      this.userIp = other.userIp;
    }
    this.timestamp = other.timestamp;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetQueryOrderAddr()) {
      this.queryOrderAddr = other.queryOrderAddr;
    }
    if (other.isSetSign()) {
      this.sign = other.sign;
    }
  }

  public AddgbChannelMoneyRequest deepCopy() {
    return new AddgbChannelMoneyRequest(this);
  }

  @Override
  public void clear() {
    setgbuidIsSet(false);
    this.gbuid = 0;
    setgbChannelIdIsSet(false);
    this.gbChannelId = 0;
    this.orderId = null;
    setBalanceTypeIsSet(false);
    this.balanceType = 0;
    this.amount = null;
    this.appId = null;
    this.channel = null;
    this.userIp = null;
    setTimestampIsSet(false);
    this.timestamp = 0;
    this.description = null;
    this.queryOrderAddr = null;
    this.sign = null;
  }

  /**
   * 受益人gbuid
   */
  public long getgbuid() {
    return this.gbuid;
  }

  /**
   * 受益人gbuid
   */
  public AddgbChannelMoneyRequest setgbuid(long gbuid) {
    this.gbuid = gbuid;
    setgbuidIsSet(true);
    return this;
  }

  public void unsetgbuid() {
    __isset_bit_vector.clear(__gbUID_ISSET_ID);
  }

  /** Returns true if field gbuid is set (has been asigned a value) and false otherwise */
  public boolean isSetgbuid() {
    return __isset_bit_vector.get(__gbUID_ISSET_ID);
  }

  public void setgbuidIsSet(boolean value) {
    __isset_bit_vector.set(__gbUID_ISSET_ID, value);
  }

  /**
   * 频道ID
   */
  public long getgbChannelId() {
    return this.gbChannelId;
  }

  /**
   * 频道ID
   */
  public AddgbChannelMoneyRequest setgbChannelId(long gbChannelId) {
    this.gbChannelId = gbChannelId;
    setgbChannelIdIsSet(true);
    return this;
  }

  public void unsetgbChannelId() {
    __isset_bit_vector.clear(__gbCHANNELID_ISSET_ID);
  }

  /** Returns true if field gbChannelId is set (has been asigned a value) and false otherwise */
  public boolean isSetgbChannelId() {
    return __isset_bit_vector.get(__gbCHANNELID_ISSET_ID);
  }

  public void setgbChannelIdIsSet(boolean value) {
    __isset_bit_vector.set(__gbCHANNELID_ISSET_ID, value);
  }

  /**
   * 订单号
   */
  public String getOrderId() {
    return this.orderId;
  }

  /**
   * 订单号
   */
  public AddgbChannelMoneyRequest setOrderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  /**
   * 货币类型
   */
  public int getBalanceType() {
    return this.balanceType;
  }

  /**
   * 货币类型
   */
  public AddgbChannelMoneyRequest setBalanceType(int balanceType) {
    this.balanceType = balanceType;
    setBalanceTypeIsSet(true);
    return this;
  }

  public void unsetBalanceType() {
    __isset_bit_vector.clear(__BALANCETYPE_ISSET_ID);
  }

  /** Returns true if field balanceType is set (has been asigned a value) and false otherwise */
  public boolean isSetBalanceType() {
    return __isset_bit_vector.get(__BALANCETYPE_ISSET_ID);
  }

  public void setBalanceTypeIsSet(boolean value) {
    __isset_bit_vector.set(__BALANCETYPE_ISSET_ID, value);
  }

  /**
   * 增加的金额，单位：元，最小单位：0.01元
   */
  public String getAmount() {
    return this.amount;
  }

  /**
   * 增加的金额，单位：元，最小单位：0.01元
   */
  public AddgbChannelMoneyRequest setAmount(String amount) {
    this.amount = amount;
    return this;
  }

  public void unsetAmount() {
    this.amount = null;
  }

  /** Returns true if field amount is set (has been asigned a value) and false otherwise */
  public boolean isSetAmount() {
    return this.amount != null;
  }

  public void setAmountIsSet(boolean value) {
    if (!value) {
      this.amount = null;
    }
  }

  /**
   * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
   */
  public String getAppId() {
    return this.appId;
  }

  /**
   * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
   */
  public AddgbChannelMoneyRequest setAppId(String appId) {
    this.appId = appId;
    return this;
  }

  public void unsetAppId() {
    this.appId = null;
  }

  /** Returns true if field appId is set (has been asigned a value) and false otherwise */
  public boolean isSetAppId() {
    return this.appId != null;
  }

  public void setAppIdIsSet(boolean value) {
    if (!value) {
      this.appId = null;
    }
  }

  /**
   * 充值渠道ID，比如alipay
   */
  public String getChannel() {
    return this.channel;
  }

  /**
   * 充值渠道ID，比如alipay
   */
  public AddgbChannelMoneyRequest setChannel(String channel) {
    this.channel = channel;
    return this;
  }

  public void unsetChannel() {
    this.channel = null;
  }

  /** Returns true if field channel is set (has been asigned a value) and false otherwise */
  public boolean isSetChannel() {
    return this.channel != null;
  }

  public void setChannelIsSet(boolean value) {
    if (!value) {
      this.channel = null;
    }
  }

  /**
   * 发生交易时，用户的IP
   */
  public String getUserIp() {
    return this.userIp;
  }

  /**
   * 发生交易时，用户的IP
   */
  public AddgbChannelMoneyRequest setUserIp(String userIp) {
    this.userIp = userIp;
    return this;
  }

  public void unsetUserIp() {
    this.userIp = null;
  }

  /** Returns true if field userIp is set (has been asigned a value) and false otherwise */
  public boolean isSetUserIp() {
    return this.userIp != null;
  }

  public void setUserIpIsSet(boolean value) {
    if (!value) {
      this.userIp = null;
    }
  }

  /**
   * 时间戳，和充值系统的时间差不超过5分钟
   */
  public long getTimestamp() {
    return this.timestamp;
  }

  /**
   * 时间戳，和充值系统的时间差不超过5分钟
   */
  public AddgbChannelMoneyRequest setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    return this;
  }

  public void unsetTimestamp() {
    __isset_bit_vector.clear(__TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been asigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return __isset_bit_vector.get(__TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bit_vector.set(__TIMESTAMP_ISSET_ID, value);
  }

  /**
   * 描述，最长100个字符
   */
  public String getDescription() {
    return this.description;
  }

  /**
   * 描述，最长100个字符
   */
  public AddgbChannelMoneyRequest setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been asigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  /**
   * 查询原始订单的地址，规范见文档
   */
  public String getQueryOrderAddr() {
    return this.queryOrderAddr;
  }

  /**
   * 查询原始订单的地址，规范见文档
   */
  public AddgbChannelMoneyRequest setQueryOrderAddr(String queryOrderAddr) {
    this.queryOrderAddr = queryOrderAddr;
    return this;
  }

  public void unsetQueryOrderAddr() {
    this.queryOrderAddr = null;
  }

  /** Returns true if field queryOrderAddr is set (has been asigned a value) and false otherwise */
  public boolean isSetQueryOrderAddr() {
    return this.queryOrderAddr != null;
  }

  public void setQueryOrderAddrIsSet(boolean value) {
    if (!value) {
      this.queryOrderAddr = null;
    }
  }

  /**
   * 校验码，HMacSha1
   */
  public String getSign() {
    return this.sign;
  }

  /**
   * 校验码，HMacSha1
   */
  public AddgbChannelMoneyRequest setSign(String sign) {
    this.sign = sign;
    return this;
  }

  public void unsetSign() {
    this.sign = null;
  }

  /** Returns true if field sign is set (has been asigned a value) and false otherwise */
  public boolean isSetSign() {
    return this.sign != null;
  }

  public void setSignIsSet(boolean value) {
    if (!value) {
      this.sign = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case gbUID:
      if (value == null) {
        unsetgbuid();
      } else {
        setgbuid((Long)value);
      }
      break;

    case gb_CHANNEL_ID:
      if (value == null) {
        unsetgbChannelId();
      } else {
        setgbChannelId((Long)value);
      }
      break;

    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;

    case BALANCE_TYPE:
      if (value == null) {
        unsetBalanceType();
      } else {
        setBalanceType((Integer)value);
      }
      break;

    case AMOUNT:
      if (value == null) {
        unsetAmount();
      } else {
        setAmount((String)value);
      }
      break;

    case APP_ID:
      if (value == null) {
        unsetAppId();
      } else {
        setAppId((String)value);
      }
      break;

    case CHANNEL:
      if (value == null) {
        unsetChannel();
      } else {
        setChannel((String)value);
      }
      break;

    case USER_IP:
      if (value == null) {
        unsetUserIp();
      } else {
        setUserIp((String)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((Long)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case QUERY_ORDER_ADDR:
      if (value == null) {
        unsetQueryOrderAddr();
      } else {
        setQueryOrderAddr((String)value);
      }
      break;

    case SIGN:
      if (value == null) {
        unsetSign();
      } else {
        setSign((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case gbUID:
      return new Long(getgbuid());

    case gb_CHANNEL_ID:
      return new Long(getgbChannelId());

    case ORDER_ID:
      return getOrderId();

    case BALANCE_TYPE:
      return new Integer(getBalanceType());

    case AMOUNT:
      return getAmount();

    case APP_ID:
      return getAppId();

    case CHANNEL:
      return getChannel();

    case USER_IP:
      return getUserIp();

    case TIMESTAMP:
      return new Long(getTimestamp());

    case DESCRIPTION:
      return getDescription();

    case QUERY_ORDER_ADDR:
      return getQueryOrderAddr();

    case SIGN:
      return getSign();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case gbUID:
      return isSetgbuid();
    case gb_CHANNEL_ID:
      return isSetgbChannelId();
    case ORDER_ID:
      return isSetOrderId();
    case BALANCE_TYPE:
      return isSetBalanceType();
    case AMOUNT:
      return isSetAmount();
    case APP_ID:
      return isSetAppId();
    case CHANNEL:
      return isSetChannel();
    case USER_IP:
      return isSetUserIp();
    case TIMESTAMP:
      return isSetTimestamp();
    case DESCRIPTION:
      return isSetDescription();
    case QUERY_ORDER_ADDR:
      return isSetQueryOrderAddr();
    case SIGN:
      return isSetSign();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AddgbChannelMoneyRequest)
      return this.equals((AddgbChannelMoneyRequest)that);
    return false;
  }

  public boolean equals(AddgbChannelMoneyRequest that) {
    if (that == null)
      return false;

    boolean this_present_gbuid = true;
    boolean that_present_gbuid = true;
    if (this_present_gbuid || that_present_gbuid) {
      if (!(this_present_gbuid && that_present_gbuid))
        return false;
      if (this.gbuid != that.gbuid)
        return false;
    }

    boolean this_present_gbChannelId = true;
    boolean that_present_gbChannelId = true;
    if (this_present_gbChannelId || that_present_gbChannelId) {
      if (!(this_present_gbChannelId && that_present_gbChannelId))
        return false;
      if (this.gbChannelId != that.gbChannelId)
        return false;
    }

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_balanceType = true;
    boolean that_present_balanceType = true;
    if (this_present_balanceType || that_present_balanceType) {
      if (!(this_present_balanceType && that_present_balanceType))
        return false;
      if (this.balanceType != that.balanceType)
        return false;
    }

    boolean this_present_amount = true && this.isSetAmount();
    boolean that_present_amount = true && that.isSetAmount();
    if (this_present_amount || that_present_amount) {
      if (!(this_present_amount && that_present_amount))
        return false;
      if (!this.amount.equals(that.amount))
        return false;
    }

    boolean this_present_appId = true && this.isSetAppId();
    boolean that_present_appId = true && that.isSetAppId();
    if (this_present_appId || that_present_appId) {
      if (!(this_present_appId && that_present_appId))
        return false;
      if (!this.appId.equals(that.appId))
        return false;
    }

    boolean this_present_channel = true && this.isSetChannel();
    boolean that_present_channel = true && that.isSetChannel();
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (!this.channel.equals(that.channel))
        return false;
    }

    boolean this_present_userIp = true && this.isSetUserIp();
    boolean that_present_userIp = true && that.isSetUserIp();
    if (this_present_userIp || that_present_userIp) {
      if (!(this_present_userIp && that_present_userIp))
        return false;
      if (!this.userIp.equals(that.userIp))
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_queryOrderAddr = true && this.isSetQueryOrderAddr();
    boolean that_present_queryOrderAddr = true && that.isSetQueryOrderAddr();
    if (this_present_queryOrderAddr || that_present_queryOrderAddr) {
      if (!(this_present_queryOrderAddr && that_present_queryOrderAddr))
        return false;
      if (!this.queryOrderAddr.equals(that.queryOrderAddr))
        return false;
    }

    boolean this_present_sign = true && this.isSetSign();
    boolean that_present_sign = true && that.isSetSign();
    if (this_present_sign || that_present_sign) {
      if (!(this_present_sign && that_present_sign))
        return false;
      if (!this.sign.equals(that.sign))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AddgbChannelMoneyRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AddgbChannelMoneyRequest typedOther = (AddgbChannelMoneyRequest)other;

    lastComparison = Boolean.valueOf(isSetgbuid()).compareTo(typedOther.isSetgbuid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetgbuid()) {
      lastComparison = TBaseHelper.compareTo(this.gbuid, typedOther.gbuid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetgbChannelId()).compareTo(typedOther.isSetgbChannelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetgbChannelId()) {
      lastComparison = TBaseHelper.compareTo(this.gbChannelId, typedOther.gbChannelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(typedOther.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = TBaseHelper.compareTo(this.orderId, typedOther.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBalanceType()).compareTo(typedOther.isSetBalanceType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBalanceType()) {
      lastComparison = TBaseHelper.compareTo(this.balanceType, typedOther.balanceType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmount()) {
      lastComparison = TBaseHelper.compareTo(this.amount, typedOther.amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppId()).compareTo(typedOther.isSetAppId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppId()) {
      lastComparison = TBaseHelper.compareTo(this.appId, typedOther.appId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannel()).compareTo(typedOther.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = TBaseHelper.compareTo(this.channel, typedOther.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIp()).compareTo(typedOther.isSetUserIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIp()) {
      lastComparison = TBaseHelper.compareTo(this.userIp, typedOther.userIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = TBaseHelper.compareTo(this.timestamp, typedOther.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = TBaseHelper.compareTo(this.description, typedOther.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQueryOrderAddr()).compareTo(typedOther.isSetQueryOrderAddr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueryOrderAddr()) {
      lastComparison = TBaseHelper.compareTo(this.queryOrderAddr, typedOther.queryOrderAddr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSign()).compareTo(typedOther.isSetSign());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSign()) {
      lastComparison = TBaseHelper.compareTo(this.sign, typedOther.sign);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // gbUID
          if (field.type == TType.I64) {
            this.gbuid = iprot.readI64();
            setgbuidIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // gb_CHANNEL_ID
          if (field.type == TType.I64) {
            this.gbChannelId = iprot.readI64();
            setgbChannelIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // ORDER_ID
          if (field.type == TType.STRING) {
            this.orderId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // BALANCE_TYPE
          if (field.type == TType.I32) {
            this.balanceType = iprot.readI32();
            setBalanceTypeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // AMOUNT
          if (field.type == TType.STRING) {
            this.amount = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // APP_ID
          if (field.type == TType.STRING) {
            this.appId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // CHANNEL
          if (field.type == TType.STRING) {
            this.channel = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // USER_IP
          if (field.type == TType.STRING) {
            this.userIp = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // TIMESTAMP
          if (field.type == TType.I64) {
            this.timestamp = iprot.readI64();
            setTimestampIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // DESCRIPTION
          if (field.type == TType.STRING) {
            this.description = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // QUERY_ORDER_ADDR
          if (field.type == TType.STRING) {
            this.queryOrderAddr = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // SIGN
          if (field.type == TType.STRING) {
            this.sign = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    if (!isSetgbuid()) {
      throw new TProtocolException("Required field 'gbuid' was not found in serialized data! Struct: " + toString());
    }
    if (!isSetgbChannelId()) {
      throw new TProtocolException("Required field 'gbChannelId' was not found in serialized data! Struct: " + toString());
    }
    if (!isSetBalanceType()) {
      throw new TProtocolException("Required field 'balanceType' was not found in serialized data! Struct: " + toString());
    }
    if (!isSetTimestamp()) {
      throw new TProtocolException("Required field 'timestamp' was not found in serialized data! Struct: " + toString());
    }
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(gbUID_FIELD_DESC);
    oprot.writeI64(this.gbuid);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(gb_CHANNEL_ID_FIELD_DESC);
    oprot.writeI64(this.gbChannelId);
    oprot.writeFieldEnd();
    if (this.orderId != null) {
      oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
      oprot.writeString(this.orderId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(BALANCE_TYPE_FIELD_DESC);
    oprot.writeI32(this.balanceType);
    oprot.writeFieldEnd();
    if (this.amount != null) {
      oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
      oprot.writeString(this.amount);
      oprot.writeFieldEnd();
    }
    if (this.appId != null) {
      oprot.writeFieldBegin(APP_ID_FIELD_DESC);
      oprot.writeString(this.appId);
      oprot.writeFieldEnd();
    }
    if (this.channel != null) {
      oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
      oprot.writeString(this.channel);
      oprot.writeFieldEnd();
    }
    if (this.userIp != null) {
      oprot.writeFieldBegin(USER_IP_FIELD_DESC);
      oprot.writeString(this.userIp);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
    oprot.writeI64(this.timestamp);
    oprot.writeFieldEnd();
    if (this.description != null) {
      oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
      oprot.writeString(this.description);
      oprot.writeFieldEnd();
    }
    if (this.queryOrderAddr != null) {
      oprot.writeFieldBegin(QUERY_ORDER_ADDR_FIELD_DESC);
      oprot.writeString(this.queryOrderAddr);
      oprot.writeFieldEnd();
    }
    if (this.sign != null) {
      oprot.writeFieldBegin(SIGN_FIELD_DESC);
      oprot.writeString(this.sign);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AddgbChannelMoneyRequest(");
    boolean first = true;

    sb.append("gbuid:");
    sb.append(this.gbuid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gbChannelId:");
    sb.append(this.gbChannelId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("balanceType:");
    sb.append(this.balanceType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("amount:");
    if (this.amount == null) {
      sb.append("null");
    } else {
      sb.append(this.amount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appId:");
    if (this.appId == null) {
      sb.append("null");
    } else {
      sb.append(this.appId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channel:");
    if (this.channel == null) {
      sb.append("null");
    } else {
      sb.append(this.channel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIp:");
    if (this.userIp == null) {
      sb.append("null");
    } else {
      sb.append(this.userIp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("queryOrderAddr:");
    if (this.queryOrderAddr == null) {
      sb.append("null");
    } else {
      sb.append(this.queryOrderAddr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sign:");
    if (this.sign == null) {
      sb.append("null");
    } else {
      sb.append(this.sign);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // alas, we cannot check 'gbuid' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'gbChannelId' because it's a primitive and you chose the non-beans generator.
    if (orderId == null) {
      throw new TProtocolException("Required field 'orderId' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'balanceType' because it's a primitive and you chose the non-beans generator.
    if (amount == null) {
      throw new TProtocolException("Required field 'amount' was not present! Struct: " + toString());
    }
    if (appId == null) {
      throw new TProtocolException("Required field 'appId' was not present! Struct: " + toString());
    }
    if (channel == null) {
      throw new TProtocolException("Required field 'channel' was not present! Struct: " + toString());
    }
    if (userIp == null) {
      throw new TProtocolException("Required field 'userIp' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'timestamp' because it's a primitive and you chose the non-beans generator.
    if (description == null) {
      throw new TProtocolException("Required field 'description' was not present! Struct: " + toString());
    }
    if (queryOrderAddr == null) {
      throw new TProtocolException("Required field 'queryOrderAddr' was not present! Struct: " + toString());
    }
    if (sign == null) {
      throw new TProtocolException("Required field 'sign' was not present! Struct: " + toString());
    }
  }

}


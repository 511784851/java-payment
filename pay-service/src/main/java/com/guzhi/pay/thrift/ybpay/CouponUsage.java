/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.guzhi.pay.thrift.gbpay;

import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

import org.apache.thrift.TBase;
import org.apache.thrift.TBaseHelper;
import org.apache.thrift.TException;
import org.apache.thrift.TFieldIdEnum;
import org.apache.thrift.TFieldRequirementType;
import org.apache.thrift.meta_data.FieldMetaData;
import org.apache.thrift.meta_data.FieldValueMetaData;
import org.apache.thrift.protocol.TField;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.protocol.TProtocolUtil;
import org.apache.thrift.protocol.TStruct;
import org.apache.thrift.protocol.TType;

/**
 * 优惠券使用
 * 2013/3/8 新增
 */
public class CouponUsage implements TBase<CouponUsage, CouponUsage._Fields>, java.io.Serializable, Cloneable {
    private static final TStruct STRUCT_DESC = new TStruct("CouponUsage");

    private static final TField gbUID_FIELD_DESC = new TField("gbuid", TType.I64, (short) 1);
    private static final TField COUPON_CODE_FIELD_DESC = new TField("couponCode", TType.STRING, (short) 2);
    private static final TField PRODUCT_FIELD_DESC = new TField("product", TType.STRING, (short) 3);
    private static final TField GAME_ID_FIELD_DESC = new TField("gameId", TType.STRING, (short) 4);
    private static final TField ACTUAL_AMOUNT_FIELD_DESC = new TField("actualAmount", TType.STRING, (short) 5);
    private static final TField USER_IP_FIELD_DESC = new TField("userIp", TType.STRING, (short) 6);
    private static final TField SIGN_FIELD_DESC = new TField("sign", TType.STRING, (short) 7);

    /**
     * 使用者的gbuid
     */
    public long gbuid;
    /**
     * 优惠券代码
     */
    public String couponCode;
    /**
     * 应用ID
     */
    public String product;
    /**
     * 游戏ID
     */
    public String gameId;
    /**
     * 实际抵用金额
     */
    public String actualAmount;
    /**
     * 用户IP
     */
    public String userIp;
    /**
     * HMacSha1 签名
     */
    public String sign;

    /**
     * The set of fields this struct contains, along with convenience methods
     * for finding and manipulating them.
     */
    public enum _Fields implements TFieldIdEnum {
        /**
         * 使用者的gbuid
         */
        gbUID((short) 1, "gbuid"),
        /**
         * 优惠券代码
         */
        COUPON_CODE((short) 2, "couponCode"),
        /**
         * 应用ID
         */
        PRODUCT((short) 3, "product"),
        /**
         * 游戏ID
         */
        GAME_ID((short) 4, "gameId"),
        /**
         * 实际抵用金额
         */
        ACTUAL_AMOUNT((short) 5, "actualAmount"),
        /**
         * 用户IP
         */
        USER_IP((short) 6, "userIp"),
        /**
         * HMacSha1 签名
         */
        SIGN((short) 7, "sign");

        private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

        static {
            for (_Fields field : EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not
         * found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
            case 1: // gbUID
                return gbUID;
            case 2: // COUPON_CODE
                return COUPON_CODE;
            case 3: // PRODUCT
                return PRODUCT;
            case 4: // GAME_ID
                return GAME_ID;
            case 5: // ACTUAL_AMOUNT
                return ACTUAL_AMOUNT;
            case 6: // USER_IP
                return USER_IP;
            case 7: // SIGN
                return SIGN;
            default:
                return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null)
                throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not
         * found.
         */
        public static _Fields findByName(String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final String _fieldName;

        _Fields(short thriftId, String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __gbUID_ISSET_ID = 0;
    private BitSet __isset_bit_vector = new BitSet(1);

    public static final Map<_Fields, FieldMetaData> metaDataMap;
    static {
        Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.gbUID, new FieldMetaData("gbuid", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.I64)));
        tmpMap.put(_Fields.COUPON_CODE, new FieldMetaData("couponCode", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.PRODUCT, new FieldMetaData("product", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.GAME_ID, new FieldMetaData("gameId", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.ACTUAL_AMOUNT, new FieldMetaData("actualAmount", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.USER_IP, new FieldMetaData("userIp", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.SIGN, new FieldMetaData("sign", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        metaDataMap = Collections.unmodifiableMap(tmpMap);
        FieldMetaData.addStructMetaDataMap(CouponUsage.class, metaDataMap);
    }

    public CouponUsage() {
    }

    public CouponUsage(long gbuid, String couponCode, String product, String gameId, String actualAmount,
            String userIp, String sign) {
        this();
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        this.couponCode = couponCode;
        this.product = product;
        this.gameId = gameId;
        this.actualAmount = actualAmount;
        this.userIp = userIp;
        this.sign = sign;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public CouponUsage(CouponUsage other) {
        __isset_bit_vector.clear();
        __isset_bit_vector.or(other.__isset_bit_vector);
        this.gbuid = other.gbuid;
        if (other.isSetCouponCode()) {
            this.couponCode = other.couponCode;
        }
        if (other.isSetProduct()) {
            this.product = other.product;
        }
        if (other.isSetGameId()) {
            this.gameId = other.gameId;
        }
        if (other.isSetActualAmount()) {
            this.actualAmount = other.actualAmount;
        }
        if (other.isSetUserIp()) {
            this.userIp = other.userIp;
        }
        if (other.isSetSign()) {
            this.sign = other.sign;
        }
    }

    public CouponUsage deepCopy() {
        return new CouponUsage(this);
    }

    @Override
    public void clear() {
        setgbuidIsSet(false);
        this.gbuid = 0;
        this.couponCode = null;
        this.product = null;
        this.gameId = null;
        this.actualAmount = null;
        this.userIp = null;
        this.sign = null;
    }

    /**
     * 使用者的gbuid
     */
    public long getgbuid() {
        return this.gbuid;
    }

    /**
     * 使用者的gbuid
     */
    public CouponUsage setgbuid(long gbuid) {
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        return this;
    }

    public void unsetgbuid() {
        __isset_bit_vector.clear(__gbUID_ISSET_ID);
    }

    /**
     * Returns true if field gbuid is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetgbuid() {
        return __isset_bit_vector.get(__gbUID_ISSET_ID);
    }

    public void setgbuidIsSet(boolean value) {
        __isset_bit_vector.set(__gbUID_ISSET_ID, value);
    }

    /**
     * 优惠券代码
     */
    public String getCouponCode() {
        return this.couponCode;
    }

    /**
     * 优惠券代码
     */
    public CouponUsage setCouponCode(String couponCode) {
        this.couponCode = couponCode;
        return this;
    }

    public void unsetCouponCode() {
        this.couponCode = null;
    }

    /**
     * Returns true if field couponCode is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetCouponCode() {
        return this.couponCode != null;
    }

    public void setCouponCodeIsSet(boolean value) {
        if (!value) {
            this.couponCode = null;
        }
    }

    /**
     * 应用ID
     */
    public String getProduct() {
        return this.product;
    }

    /**
     * 应用ID
     */
    public CouponUsage setProduct(String product) {
        this.product = product;
        return this;
    }

    public void unsetProduct() {
        this.product = null;
    }

    /**
     * Returns true if field product is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetProduct() {
        return this.product != null;
    }

    public void setProductIsSet(boolean value) {
        if (!value) {
            this.product = null;
        }
    }

    /**
     * 游戏ID
     */
    public String getGameId() {
        return this.gameId;
    }

    /**
     * 游戏ID
     */
    public CouponUsage setGameId(String gameId) {
        this.gameId = gameId;
        return this;
    }

    public void unsetGameId() {
        this.gameId = null;
    }

    /**
     * Returns true if field gameId is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetGameId() {
        return this.gameId != null;
    }

    public void setGameIdIsSet(boolean value) {
        if (!value) {
            this.gameId = null;
        }
    }

    /**
     * 实际抵用金额
     */
    public String getActualAmount() {
        return this.actualAmount;
    }

    /**
     * 实际抵用金额
     */
    public CouponUsage setActualAmount(String actualAmount) {
        this.actualAmount = actualAmount;
        return this;
    }

    public void unsetActualAmount() {
        this.actualAmount = null;
    }

    /**
     * Returns true if field actualAmount is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetActualAmount() {
        return this.actualAmount != null;
    }

    public void setActualAmountIsSet(boolean value) {
        if (!value) {
            this.actualAmount = null;
        }
    }

    /**
     * 用户IP
     */
    public String getUserIp() {
        return this.userIp;
    }

    /**
     * 用户IP
     */
    public CouponUsage setUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }

    public void unsetUserIp() {
        this.userIp = null;
    }

    /**
     * Returns true if field userIp is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetUserIp() {
        return this.userIp != null;
    }

    public void setUserIpIsSet(boolean value) {
        if (!value) {
            this.userIp = null;
        }
    }

    /**
     * HMacSha1 签名
     */
    public String getSign() {
        return this.sign;
    }

    /**
     * HMacSha1 签名
     */
    public CouponUsage setSign(String sign) {
        this.sign = sign;
        return this;
    }

    public void unsetSign() {
        this.sign = null;
    }

    /**
     * Returns true if field sign is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetSign() {
        return this.sign != null;
    }

    public void setSignIsSet(boolean value) {
        if (!value) {
            this.sign = null;
        }
    }

    public void setFieldValue(_Fields field, Object value) {
        switch (field) {
        case gbUID:
            if (value == null) {
                unsetgbuid();
            } else {
                setgbuid((Long) value);
            }
            break;

        case COUPON_CODE:
            if (value == null) {
                unsetCouponCode();
            } else {
                setCouponCode((String) value);
            }
            break;

        case PRODUCT:
            if (value == null) {
                unsetProduct();
            } else {
                setProduct((String) value);
            }
            break;

        case GAME_ID:
            if (value == null) {
                unsetGameId();
            } else {
                setGameId((String) value);
            }
            break;

        case ACTUAL_AMOUNT:
            if (value == null) {
                unsetActualAmount();
            } else {
                setActualAmount((String) value);
            }
            break;

        case USER_IP:
            if (value == null) {
                unsetUserIp();
            } else {
                setUserIp((String) value);
            }
            break;

        case SIGN:
            if (value == null) {
                unsetSign();
            } else {
                setSign((String) value);
            }
            break;

        }
    }

    public Object getFieldValue(_Fields field) {
        switch (field) {
        case gbUID:
            return new Long(getgbuid());

        case COUPON_CODE:
            return getCouponCode();

        case PRODUCT:
            return getProduct();

        case GAME_ID:
            return getGameId();

        case ACTUAL_AMOUNT:
            return getActualAmount();

        case USER_IP:
            return getUserIp();

        case SIGN:
            return getSign();

        }
        throw new IllegalStateException();
    }

    /**
     * Returns true if field corresponding to fieldID is set (has been asigned a
     * value) and false otherwise
     */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new IllegalArgumentException();
        }

        switch (field) {
        case gbUID:
            return isSetgbuid();
        case COUPON_CODE:
            return isSetCouponCode();
        case PRODUCT:
            return isSetProduct();
        case GAME_ID:
            return isSetGameId();
        case ACTUAL_AMOUNT:
            return isSetActualAmount();
        case USER_IP:
            return isSetUserIp();
        case SIGN:
            return isSetSign();
        }
        throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
        if (that == null)
            return false;
        if (that instanceof CouponUsage)
            return this.equals((CouponUsage) that);
        return false;
    }

    public boolean equals(CouponUsage that) {
        if (that == null)
            return false;

        boolean this_present_gbuid = true;
        boolean that_present_gbuid = true;
        if (this_present_gbuid || that_present_gbuid) {
            if (!(this_present_gbuid && that_present_gbuid))
                return false;
            if (this.gbuid != that.gbuid)
                return false;
        }

        boolean this_present_couponCode = true && this.isSetCouponCode();
        boolean that_present_couponCode = true && that.isSetCouponCode();
        if (this_present_couponCode || that_present_couponCode) {
            if (!(this_present_couponCode && that_present_couponCode))
                return false;
            if (!this.couponCode.equals(that.couponCode))
                return false;
        }

        boolean this_present_product = true && this.isSetProduct();
        boolean that_present_product = true && that.isSetProduct();
        if (this_present_product || that_present_product) {
            if (!(this_present_product && that_present_product))
                return false;
            if (!this.product.equals(that.product))
                return false;
        }

        boolean this_present_gameId = true && this.isSetGameId();
        boolean that_present_gameId = true && that.isSetGameId();
        if (this_present_gameId || that_present_gameId) {
            if (!(this_present_gameId && that_present_gameId))
                return false;
            if (!this.gameId.equals(that.gameId))
                return false;
        }

        boolean this_present_actualAmount = true && this.isSetActualAmount();
        boolean that_present_actualAmount = true && that.isSetActualAmount();
        if (this_present_actualAmount || that_present_actualAmount) {
            if (!(this_present_actualAmount && that_present_actualAmount))
                return false;
            if (!this.actualAmount.equals(that.actualAmount))
                return false;
        }

        boolean this_present_userIp = true && this.isSetUserIp();
        boolean that_present_userIp = true && that.isSetUserIp();
        if (this_present_userIp || that_present_userIp) {
            if (!(this_present_userIp && that_present_userIp))
                return false;
            if (!this.userIp.equals(that.userIp))
                return false;
        }

        boolean this_present_sign = true && this.isSetSign();
        boolean that_present_sign = true && that.isSetSign();
        if (this_present_sign || that_present_sign) {
            if (!(this_present_sign && that_present_sign))
                return false;
            if (!this.sign.equals(that.sign))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        return 0;
    }

    public int compareTo(CouponUsage other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;
        CouponUsage typedOther = (CouponUsage) other;

        lastComparison = Boolean.valueOf(isSetgbuid()).compareTo(typedOther.isSetgbuid());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetgbuid()) {
            lastComparison = TBaseHelper.compareTo(this.gbuid, typedOther.gbuid);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetCouponCode()).compareTo(typedOther.isSetCouponCode());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCouponCode()) {
            lastComparison = TBaseHelper.compareTo(this.couponCode, typedOther.couponCode);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetProduct()).compareTo(typedOther.isSetProduct());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetProduct()) {
            lastComparison = TBaseHelper.compareTo(this.product, typedOther.product);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetGameId()).compareTo(typedOther.isSetGameId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetGameId()) {
            lastComparison = TBaseHelper.compareTo(this.gameId, typedOther.gameId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetActualAmount()).compareTo(typedOther.isSetActualAmount());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetActualAmount()) {
            lastComparison = TBaseHelper.compareTo(this.actualAmount, typedOther.actualAmount);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetUserIp()).compareTo(typedOther.isSetUserIp());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUserIp()) {
            lastComparison = TBaseHelper.compareTo(this.userIp, typedOther.userIp);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetSign()).compareTo(typedOther.isSetSign());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSign()) {
            lastComparison = TBaseHelper.compareTo(this.sign, typedOther.sign);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(TProtocol iprot) throws TException {
        TField field;
        iprot.readStructBegin();
        while (true) {
            field = iprot.readFieldBegin();
            if (field.type == TType.STOP) {
                break;
            }
            switch (field.id) {
            case 1: // gbUID
                if (field.type == TType.I64) {
                    this.gbuid = iprot.readI64();
                    setgbuidIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 2: // COUPON_CODE
                if (field.type == TType.STRING) {
                    this.couponCode = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 3: // PRODUCT
                if (field.type == TType.STRING) {
                    this.product = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 4: // GAME_ID
                if (field.type == TType.STRING) {
                    this.gameId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 5: // ACTUAL_AMOUNT
                if (field.type == TType.STRING) {
                    this.actualAmount = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 6: // USER_IP
                if (field.type == TType.STRING) {
                    this.userIp = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 7: // SIGN
                if (field.type == TType.STRING) {
                    this.sign = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            default:
                TProtocolUtil.skip(iprot, field.type);
            }
            iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked
        // in the validate method
        if (!isSetgbuid()) {
            throw new TProtocolException("Required field 'gbuid' was not found in serialized data! Struct: "
                    + toString());
        }
        validate();
    }

    public void write(TProtocol oprot) throws TException {
        validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(gbUID_FIELD_DESC);
        oprot.writeI64(this.gbuid);
        oprot.writeFieldEnd();
        if (this.couponCode != null) {
            oprot.writeFieldBegin(COUPON_CODE_FIELD_DESC);
            oprot.writeString(this.couponCode);
            oprot.writeFieldEnd();
        }
        if (this.product != null) {
            oprot.writeFieldBegin(PRODUCT_FIELD_DESC);
            oprot.writeString(this.product);
            oprot.writeFieldEnd();
        }
        if (this.gameId != null) {
            oprot.writeFieldBegin(GAME_ID_FIELD_DESC);
            oprot.writeString(this.gameId);
            oprot.writeFieldEnd();
        }
        if (this.actualAmount != null) {
            oprot.writeFieldBegin(ACTUAL_AMOUNT_FIELD_DESC);
            oprot.writeString(this.actualAmount);
            oprot.writeFieldEnd();
        }
        if (this.userIp != null) {
            oprot.writeFieldBegin(USER_IP_FIELD_DESC);
            oprot.writeString(this.userIp);
            oprot.writeFieldEnd();
        }
        if (this.sign != null) {
            oprot.writeFieldBegin(SIGN_FIELD_DESC);
            oprot.writeString(this.sign);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CouponUsage(");
        boolean first = true;

        sb.append("gbuid:");
        sb.append(this.gbuid);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("couponCode:");
        if (this.couponCode == null) {
            sb.append("null");
        } else {
            sb.append(this.couponCode);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("product:");
        if (this.product == null) {
            sb.append("null");
        } else {
            sb.append(this.product);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("gameId:");
        if (this.gameId == null) {
            sb.append("null");
        } else {
            sb.append(this.gameId);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("actualAmount:");
        if (this.actualAmount == null) {
            sb.append("null");
        } else {
            sb.append(this.actualAmount);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("userIp:");
        if (this.userIp == null) {
            sb.append("null");
        } else {
            sb.append(this.userIp);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("sign:");
        if (this.sign == null) {
            sb.append("null");
        } else {
            sb.append(this.sign);
        }
        first = false;
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws TException {
        // check for required fields
        // alas, we cannot check 'gbuid' because it's a primitive and you chose
        // the non-beans generator.
        if (couponCode == null) {
            throw new TProtocolException("Required field 'couponCode' was not present! Struct: " + toString());
        }
        if (product == null) {
            throw new TProtocolException("Required field 'product' was not present! Struct: " + toString());
        }
        if (gameId == null) {
            throw new TProtocolException("Required field 'gameId' was not present! Struct: " + toString());
        }
        if (actualAmount == null) {
            throw new TProtocolException("Required field 'actualAmount' was not present! Struct: " + toString());
        }
        if (userIp == null) {
            throw new TProtocolException("Required field 'userIp' was not present! Struct: " + toString());
        }
        if (sign == null) {
            throw new TProtocolException("Required field 'sign' was not present! Struct: " + toString());
        }
    }

}

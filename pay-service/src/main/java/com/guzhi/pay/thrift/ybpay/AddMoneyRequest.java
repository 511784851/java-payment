/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.guzhi.pay.thrift.gbpay;

import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

import org.apache.thrift.TBase;
import org.apache.thrift.TBaseHelper;
import org.apache.thrift.TException;
import org.apache.thrift.TFieldIdEnum;
import org.apache.thrift.TFieldRequirementType;
import org.apache.thrift.meta_data.FieldMetaData;
import org.apache.thrift.meta_data.FieldValueMetaData;
import org.apache.thrift.protocol.TField;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.protocol.TProtocolUtil;
import org.apache.thrift.protocol.TStruct;
import org.apache.thrift.protocol.TType;

/**
 * 增加虚拟货币的请求
 * 2013/2/27新增
 */
public class AddMoneyRequest implements TBase<AddMoneyRequest, AddMoneyRequest._Fields>, java.io.Serializable,
        Cloneable {
    private static final TStruct STRUCT_DESC = new TStruct("AddMoneyRequest");

    private static final TField gbUID_FIELD_DESC = new TField("gbuid", TType.I64, (short) 1);
    private static final TField ORDER_ID_FIELD_DESC = new TField("orderId", TType.STRING, (short) 2);
    private static final TField MONEY_TYPE_FIELD_DESC = new TField("moneyType", TType.I32, (short) 3);
    private static final TField MONEY_FIELD_DESC = new TField("money", TType.STRING, (short) 4);
    private static final TField PRODUCT_FIELD_DESC = new TField("product", TType.STRING, (short) 5);
    private static final TField CHANNEL_FIELD_DESC = new TField("channel", TType.STRING, (short) 6);
    private static final TField USER_IP_FIELD_DESC = new TField("userIp", TType.STRING, (short) 7);
    private static final TField ADD_TIME_FIELD_DESC = new TField("addTime", TType.STRING, (short) 8);
    private static final TField DESCRIPTION_FIELD_DESC = new TField("description", TType.STRING, (short) 9);
    private static final TField QUERY_ORDER_ADDR_FIELD_DESC = new TField("queryOrderAddr", TType.STRING, (short) 10);
    private static final TField SIGN_FIELD_DESC = new TField("sign", TType.STRING, (short) 11);
    private static final TField DEPOSIT_gbUID_FIELD_DESC = new TField("depositgbuid", TType.I64, (short) 12);

    /**
     * 受益人gbuid
     */
    public long gbuid;
    /**
     * 订单号
     */
    public String orderId;
    /**
     * 货币类型
     */
    public int moneyType;
    /**
     * 增加的金额，单位：元，最小单位：0.01元
     */
    public String money;
    /**
     * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
     */
    public String product;
    /**
     * 充值渠道ID，比如alipay
     */
    public String channel;
    /**
     * 发生交易时，用户的IP
     */
    public String userIp;
    /**
     * 业务系统记录的加G币的时间，和充值系统当前时间的差不能超过5分钟
     */
    public String addTime;
    /**
     * 描述，最长100个字符
     */
    public String description;
    /**
     * 查询原始订单的地址，规范见文档
     */
    public String queryOrderAddr;
    /**
     * 校验码，HMacSha1
     */
    public String sign;
    /**
     * 充值人的gbuid，当为0时，默认取gbuid的值，也就是为自己充值，否则是代充
     */
    public long depositgbuid;

    /**
     * The set of fields this struct contains, along with convenience methods
     * for finding and manipulating them.
     */
    public enum _Fields implements TFieldIdEnum {
        /**
         * 受益人gbuid
         */
        gbUID((short) 1, "gbuid"),
        /**
         * 订单号
         */
        ORDER_ID((short) 2, "orderId"),
        /**
         * 货币类型
         */
        MONEY_TYPE((short) 3, "moneyType"),
        /**
         * 增加的金额，单位：元，最小单位：0.01元
         */
        MONEY((short) 4, "money"),
        /**
         * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
         */
        PRODUCT((short) 5, "product"),
        /**
         * 充值渠道ID，比如alipay
         */
        CHANNEL((short) 6, "channel"),
        /**
         * 发生交易时，用户的IP
         */
        USER_IP((short) 7, "userIp"),
        /**
         * 业务系统记录的加G币的时间，和充值系统当前时间的差不能超过5分钟
         */
        ADD_TIME((short) 8, "addTime"),
        /**
         * 描述，最长100个字符
         */
        DESCRIPTION((short) 9, "description"),
        /**
         * 查询原始订单的地址，规范见文档
         */
        QUERY_ORDER_ADDR((short) 10, "queryOrderAddr"),
        /**
         * 校验码，HMacSha1
         */
        SIGN((short) 11, "sign"),
        /**
         * 充值人的gbuid，当为0时，默认取gbuid的值，也就是为自己充值，否则是代充
         */
        DEPOSIT_gbUID((short) 12, "depositgbuid");

        private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

        static {
            for (_Fields field : EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not
         * found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
            case 1: // gbUID
                return gbUID;
            case 2: // ORDER_ID
                return ORDER_ID;
            case 3: // MONEY_TYPE
                return MONEY_TYPE;
            case 4: // MONEY
                return MONEY;
            case 5: // PRODUCT
                return PRODUCT;
            case 6: // CHANNEL
                return CHANNEL;
            case 7: // USER_IP
                return USER_IP;
            case 8: // ADD_TIME
                return ADD_TIME;
            case 9: // DESCRIPTION
                return DESCRIPTION;
            case 10: // QUERY_ORDER_ADDR
                return QUERY_ORDER_ADDR;
            case 11: // SIGN
                return SIGN;
            case 12: // DEPOSIT_gbUID
                return DEPOSIT_gbUID;
            default:
                return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null)
                throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not
         * found.
         */
        public static _Fields findByName(String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final String _fieldName;

        _Fields(short thriftId, String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __gbUID_ISSET_ID = 0;
    private static final int __MONEYTYPE_ISSET_ID = 1;
    private static final int __DEPOSITgbUID_ISSET_ID = 2;
    private BitSet __isset_bit_vector = new BitSet(3);

    public static final Map<_Fields, FieldMetaData> metaDataMap;
    static {
        Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.gbUID, new FieldMetaData("gbuid", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.I64)));
        tmpMap.put(_Fields.ORDER_ID, new FieldMetaData("orderId", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.MONEY_TYPE, new FieldMetaData("moneyType", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.I32)));
        tmpMap.put(_Fields.MONEY, new FieldMetaData("money", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.PRODUCT, new FieldMetaData("product", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.CHANNEL, new FieldMetaData("channel", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.USER_IP, new FieldMetaData("userIp", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.ADD_TIME, new FieldMetaData("addTime", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.DESCRIPTION, new FieldMetaData("description", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.QUERY_ORDER_ADDR, new FieldMetaData("queryOrderAddr", TFieldRequirementType.REQUIRED,
                new FieldValueMetaData(TType.STRING)));
        tmpMap.put(_Fields.SIGN, new FieldMetaData("sign", TFieldRequirementType.REQUIRED, new FieldValueMetaData(
                TType.STRING)));
        tmpMap.put(_Fields.DEPOSIT_gbUID, new FieldMetaData("depositgbuid", TFieldRequirementType.OPTIONAL,
                new FieldValueMetaData(TType.I64)));
        metaDataMap = Collections.unmodifiableMap(tmpMap);
        FieldMetaData.addStructMetaDataMap(AddMoneyRequest.class, metaDataMap);
    }

    public AddMoneyRequest() {
        this.depositgbuid = 0L;

    }

    public AddMoneyRequest(long gbuid, String orderId, int moneyType, String money, String product, String channel,
            String userIp, String addTime, String description, String queryOrderAddr, String sign) {
        this();
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        this.orderId = orderId;
        this.moneyType = moneyType;
        setMoneyTypeIsSet(true);
        this.money = money;
        this.product = product;
        this.channel = channel;
        this.userIp = userIp;
        this.addTime = addTime;
        this.description = description;
        this.queryOrderAddr = queryOrderAddr;
        this.sign = sign;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AddMoneyRequest(AddMoneyRequest other) {
        __isset_bit_vector.clear();
        __isset_bit_vector.or(other.__isset_bit_vector);
        this.gbuid = other.gbuid;
        if (other.isSetOrderId()) {
            this.orderId = other.orderId;
        }
        this.moneyType = other.moneyType;
        if (other.isSetMoney()) {
            this.money = other.money;
        }
        if (other.isSetProduct()) {
            this.product = other.product;
        }
        if (other.isSetChannel()) {
            this.channel = other.channel;
        }
        if (other.isSetUserIp()) {
            this.userIp = other.userIp;
        }
        if (other.isSetAddTime()) {
            this.addTime = other.addTime;
        }
        if (other.isSetDescription()) {
            this.description = other.description;
        }
        if (other.isSetQueryOrderAddr()) {
            this.queryOrderAddr = other.queryOrderAddr;
        }
        if (other.isSetSign()) {
            this.sign = other.sign;
        }
        this.depositgbuid = other.depositgbuid;
    }

    public AddMoneyRequest deepCopy() {
        return new AddMoneyRequest(this);
    }

    @Override
    public void clear() {
        setgbuidIsSet(false);
        this.gbuid = 0;
        this.orderId = null;
        setMoneyTypeIsSet(false);
        this.moneyType = 0;
        this.money = null;
        this.product = null;
        this.channel = null;
        this.userIp = null;
        this.addTime = null;
        this.description = null;
        this.queryOrderAddr = null;
        this.sign = null;
        this.depositgbuid = 0L;

    }

    /**
     * 受益人gbuid
     */
    public long getgbuid() {
        return this.gbuid;
    }

    /**
     * 受益人gbuid
     */
    public AddMoneyRequest setgbuid(long gbuid) {
        this.gbuid = gbuid;
        setgbuidIsSet(true);
        return this;
    }

    public void unsetgbuid() {
        __isset_bit_vector.clear(__gbUID_ISSET_ID);
    }

    /**
     * Returns true if field gbuid is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetgbuid() {
        return __isset_bit_vector.get(__gbUID_ISSET_ID);
    }

    public void setgbuidIsSet(boolean value) {
        __isset_bit_vector.set(__gbUID_ISSET_ID, value);
    }

    /**
     * 订单号
     */
    public String getOrderId() {
        return this.orderId;
    }

    /**
     * 订单号
     */
    public AddMoneyRequest setOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }

    public void unsetOrderId() {
        this.orderId = null;
    }

    /**
     * Returns true if field orderId is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetOrderId() {
        return this.orderId != null;
    }

    public void setOrderIdIsSet(boolean value) {
        if (!value) {
            this.orderId = null;
        }
    }

    /**
     * 货币类型
     */
    public int getMoneyType() {
        return this.moneyType;
    }

    /**
     * 货币类型
     */
    public AddMoneyRequest setMoneyType(int moneyType) {
        this.moneyType = moneyType;
        setMoneyTypeIsSet(true);
        return this;
    }

    public void unsetMoneyType() {
        __isset_bit_vector.clear(__MONEYTYPE_ISSET_ID);
    }

    /**
     * Returns true if field moneyType is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetMoneyType() {
        return __isset_bit_vector.get(__MONEYTYPE_ISSET_ID);
    }

    public void setMoneyTypeIsSet(boolean value) {
        __isset_bit_vector.set(__MONEYTYPE_ISSET_ID, value);
    }

    /**
     * 增加的金额，单位：元，最小单位：0.01元
     */
    public String getMoney() {
        return this.money;
    }

    /**
     * 增加的金额，单位：元，最小单位：0.01元
     */
    public AddMoneyRequest setMoney(String money) {
        this.money = money;
        return this;
    }

    public void unsetMoney() {
        this.money = null;
    }

    /**
     * Returns true if field money is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetMoney() {
        return this.money != null;
    }

    public void setMoneyIsSet(boolean value) {
        if (!value) {
            this.money = null;
        }
    }

    /**
     * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
     */
    public String getProduct() {
        return this.product;
    }

    /**
     * 调用此接口的应用ID，比如gb音乐叫gbMUSIC
     */
    public AddMoneyRequest setProduct(String product) {
        this.product = product;
        return this;
    }

    public void unsetProduct() {
        this.product = null;
    }

    /**
     * Returns true if field product is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetProduct() {
        return this.product != null;
    }

    public void setProductIsSet(boolean value) {
        if (!value) {
            this.product = null;
        }
    }

    /**
     * 充值渠道ID，比如alipay
     */
    public String getChannel() {
        return this.channel;
    }

    /**
     * 充值渠道ID，比如alipay
     */
    public AddMoneyRequest setChannel(String channel) {
        this.channel = channel;
        return this;
    }

    public void unsetChannel() {
        this.channel = null;
    }

    /**
     * Returns true if field channel is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetChannel() {
        return this.channel != null;
    }

    public void setChannelIsSet(boolean value) {
        if (!value) {
            this.channel = null;
        }
    }

    /**
     * 发生交易时，用户的IP
     */
    public String getUserIp() {
        return this.userIp;
    }

    /**
     * 发生交易时，用户的IP
     */
    public AddMoneyRequest setUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }

    public void unsetUserIp() {
        this.userIp = null;
    }

    /**
     * Returns true if field userIp is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetUserIp() {
        return this.userIp != null;
    }

    public void setUserIpIsSet(boolean value) {
        if (!value) {
            this.userIp = null;
        }
    }

    /**
     * 业务系统记录的加G币的时间，和充值系统当前时间的差不能超过5分钟
     */
    public String getAddTime() {
        return this.addTime;
    }

    /**
     * 业务系统记录的加G币的时间，和充值系统当前时间的差不能超过5分钟
     */
    public AddMoneyRequest setAddTime(String addTime) {
        this.addTime = addTime;
        return this;
    }

    public void unsetAddTime() {
        this.addTime = null;
    }

    /**
     * Returns true if field addTime is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetAddTime() {
        return this.addTime != null;
    }

    public void setAddTimeIsSet(boolean value) {
        if (!value) {
            this.addTime = null;
        }
    }

    /**
     * 描述，最长100个字符
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * 描述，最长100个字符
     */
    public AddMoneyRequest setDescription(String description) {
        this.description = description;
        return this;
    }

    public void unsetDescription() {
        this.description = null;
    }

    /**
     * Returns true if field description is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetDescription() {
        return this.description != null;
    }

    public void setDescriptionIsSet(boolean value) {
        if (!value) {
            this.description = null;
        }
    }

    /**
     * 查询原始订单的地址，规范见文档
     */
    public String getQueryOrderAddr() {
        return this.queryOrderAddr;
    }

    /**
     * 查询原始订单的地址，规范见文档
     */
    public AddMoneyRequest setQueryOrderAddr(String queryOrderAddr) {
        this.queryOrderAddr = queryOrderAddr;
        return this;
    }

    public void unsetQueryOrderAddr() {
        this.queryOrderAddr = null;
    }

    /**
     * Returns true if field queryOrderAddr is set (has been asigned a value)
     * and false otherwise
     */
    public boolean isSetQueryOrderAddr() {
        return this.queryOrderAddr != null;
    }

    public void setQueryOrderAddrIsSet(boolean value) {
        if (!value) {
            this.queryOrderAddr = null;
        }
    }

    /**
     * 校验码，HMacSha1
     */
    public String getSign() {
        return this.sign;
    }

    /**
     * 校验码，HMacSha1
     */
    public AddMoneyRequest setSign(String sign) {
        this.sign = sign;
        return this;
    }

    public void unsetSign() {
        this.sign = null;
    }

    /**
     * Returns true if field sign is set (has been asigned a value) and false
     * otherwise
     */
    public boolean isSetSign() {
        return this.sign != null;
    }

    public void setSignIsSet(boolean value) {
        if (!value) {
            this.sign = null;
        }
    }

    /**
     * 充值人的gbuid，当为0时，默认取gbuid的值，也就是为自己充值，否则是代充
     */
    public long getDepositgbuid() {
        return this.depositgbuid;
    }

    /**
     * 充值人的gbuid，当为0时，默认取gbuid的值，也就是为自己充值，否则是代充
     */
    public AddMoneyRequest setDepositgbuid(long depositgbuid) {
        this.depositgbuid = depositgbuid;
        setDepositgbuidIsSet(true);
        return this;
    }

    public void unsetDepositgbuid() {
        __isset_bit_vector.clear(__DEPOSITgbUID_ISSET_ID);
    }

    /**
     * Returns true if field depositgbuid is set (has been asigned a value) and
     * false otherwise
     */
    public boolean isSetDepositgbuid() {
        return __isset_bit_vector.get(__DEPOSITgbUID_ISSET_ID);
    }

    public void setDepositgbuidIsSet(boolean value) {
        __isset_bit_vector.set(__DEPOSITgbUID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
        switch (field) {
        case gbUID:
            if (value == null) {
                unsetgbuid();
            } else {
                setgbuid((Long) value);
            }
            break;

        case ORDER_ID:
            if (value == null) {
                unsetOrderId();
            } else {
                setOrderId((String) value);
            }
            break;

        case MONEY_TYPE:
            if (value == null) {
                unsetMoneyType();
            } else {
                setMoneyType((Integer) value);
            }
            break;

        case MONEY:
            if (value == null) {
                unsetMoney();
            } else {
                setMoney((String) value);
            }
            break;

        case PRODUCT:
            if (value == null) {
                unsetProduct();
            } else {
                setProduct((String) value);
            }
            break;

        case CHANNEL:
            if (value == null) {
                unsetChannel();
            } else {
                setChannel((String) value);
            }
            break;

        case USER_IP:
            if (value == null) {
                unsetUserIp();
            } else {
                setUserIp((String) value);
            }
            break;

        case ADD_TIME:
            if (value == null) {
                unsetAddTime();
            } else {
                setAddTime((String) value);
            }
            break;

        case DESCRIPTION:
            if (value == null) {
                unsetDescription();
            } else {
                setDescription((String) value);
            }
            break;

        case QUERY_ORDER_ADDR:
            if (value == null) {
                unsetQueryOrderAddr();
            } else {
                setQueryOrderAddr((String) value);
            }
            break;

        case SIGN:
            if (value == null) {
                unsetSign();
            } else {
                setSign((String) value);
            }
            break;

        case DEPOSIT_gbUID:
            if (value == null) {
                unsetDepositgbuid();
            } else {
                setDepositgbuid((Long) value);
            }
            break;

        }
    }

    public Object getFieldValue(_Fields field) {
        switch (field) {
        case gbUID:
            return new Long(getgbuid());

        case ORDER_ID:
            return getOrderId();

        case MONEY_TYPE:
            return new Integer(getMoneyType());

        case MONEY:
            return getMoney();

        case PRODUCT:
            return getProduct();

        case CHANNEL:
            return getChannel();

        case USER_IP:
            return getUserIp();

        case ADD_TIME:
            return getAddTime();

        case DESCRIPTION:
            return getDescription();

        case QUERY_ORDER_ADDR:
            return getQueryOrderAddr();

        case SIGN:
            return getSign();

        case DEPOSIT_gbUID:
            return new Long(getDepositgbuid());

        }
        throw new IllegalStateException();
    }

    /**
     * Returns true if field corresponding to fieldID is set (has been asigned a
     * value) and false otherwise
     */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new IllegalArgumentException();
        }

        switch (field) {
        case gbUID:
            return isSetgbuid();
        case ORDER_ID:
            return isSetOrderId();
        case MONEY_TYPE:
            return isSetMoneyType();
        case MONEY:
            return isSetMoney();
        case PRODUCT:
            return isSetProduct();
        case CHANNEL:
            return isSetChannel();
        case USER_IP:
            return isSetUserIp();
        case ADD_TIME:
            return isSetAddTime();
        case DESCRIPTION:
            return isSetDescription();
        case QUERY_ORDER_ADDR:
            return isSetQueryOrderAddr();
        case SIGN:
            return isSetSign();
        case DEPOSIT_gbUID:
            return isSetDepositgbuid();
        }
        throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
        if (that == null)
            return false;
        if (that instanceof AddMoneyRequest)
            return this.equals((AddMoneyRequest) that);
        return false;
    }

    public boolean equals(AddMoneyRequest that) {
        if (that == null)
            return false;

        boolean this_present_gbuid = true;
        boolean that_present_gbuid = true;
        if (this_present_gbuid || that_present_gbuid) {
            if (!(this_present_gbuid && that_present_gbuid))
                return false;
            if (this.gbuid != that.gbuid)
                return false;
        }

        boolean this_present_orderId = true && this.isSetOrderId();
        boolean that_present_orderId = true && that.isSetOrderId();
        if (this_present_orderId || that_present_orderId) {
            if (!(this_present_orderId && that_present_orderId))
                return false;
            if (!this.orderId.equals(that.orderId))
                return false;
        }

        boolean this_present_moneyType = true;
        boolean that_present_moneyType = true;
        if (this_present_moneyType || that_present_moneyType) {
            if (!(this_present_moneyType && that_present_moneyType))
                return false;
            if (this.moneyType != that.moneyType)
                return false;
        }

        boolean this_present_money = true && this.isSetMoney();
        boolean that_present_money = true && that.isSetMoney();
        if (this_present_money || that_present_money) {
            if (!(this_present_money && that_present_money))
                return false;
            if (!this.money.equals(that.money))
                return false;
        }

        boolean this_present_product = true && this.isSetProduct();
        boolean that_present_product = true && that.isSetProduct();
        if (this_present_product || that_present_product) {
            if (!(this_present_product && that_present_product))
                return false;
            if (!this.product.equals(that.product))
                return false;
        }

        boolean this_present_channel = true && this.isSetChannel();
        boolean that_present_channel = true && that.isSetChannel();
        if (this_present_channel || that_present_channel) {
            if (!(this_present_channel && that_present_channel))
                return false;
            if (!this.channel.equals(that.channel))
                return false;
        }

        boolean this_present_userIp = true && this.isSetUserIp();
        boolean that_present_userIp = true && that.isSetUserIp();
        if (this_present_userIp || that_present_userIp) {
            if (!(this_present_userIp && that_present_userIp))
                return false;
            if (!this.userIp.equals(that.userIp))
                return false;
        }

        boolean this_present_addTime = true && this.isSetAddTime();
        boolean that_present_addTime = true && that.isSetAddTime();
        if (this_present_addTime || that_present_addTime) {
            if (!(this_present_addTime && that_present_addTime))
                return false;
            if (!this.addTime.equals(that.addTime))
                return false;
        }

        boolean this_present_description = true && this.isSetDescription();
        boolean that_present_description = true && that.isSetDescription();
        if (this_present_description || that_present_description) {
            if (!(this_present_description && that_present_description))
                return false;
            if (!this.description.equals(that.description))
                return false;
        }

        boolean this_present_queryOrderAddr = true && this.isSetQueryOrderAddr();
        boolean that_present_queryOrderAddr = true && that.isSetQueryOrderAddr();
        if (this_present_queryOrderAddr || that_present_queryOrderAddr) {
            if (!(this_present_queryOrderAddr && that_present_queryOrderAddr))
                return false;
            if (!this.queryOrderAddr.equals(that.queryOrderAddr))
                return false;
        }

        boolean this_present_sign = true && this.isSetSign();
        boolean that_present_sign = true && that.isSetSign();
        if (this_present_sign || that_present_sign) {
            if (!(this_present_sign && that_present_sign))
                return false;
            if (!this.sign.equals(that.sign))
                return false;
        }

        boolean this_present_depositgbuid = true && this.isSetDepositgbuid();
        boolean that_present_depositgbuid = true && that.isSetDepositgbuid();
        if (this_present_depositgbuid || that_present_depositgbuid) {
            if (!(this_present_depositgbuid && that_present_depositgbuid))
                return false;
            if (this.depositgbuid != that.depositgbuid)
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        return 0;
    }

    public int compareTo(AddMoneyRequest other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;
        AddMoneyRequest typedOther = (AddMoneyRequest) other;

        lastComparison = Boolean.valueOf(isSetgbuid()).compareTo(typedOther.isSetgbuid());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetgbuid()) {
            lastComparison = TBaseHelper.compareTo(this.gbuid, typedOther.gbuid);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(typedOther.isSetOrderId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetOrderId()) {
            lastComparison = TBaseHelper.compareTo(this.orderId, typedOther.orderId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetMoneyType()).compareTo(typedOther.isSetMoneyType());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMoneyType()) {
            lastComparison = TBaseHelper.compareTo(this.moneyType, typedOther.moneyType);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetMoney()).compareTo(typedOther.isSetMoney());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMoney()) {
            lastComparison = TBaseHelper.compareTo(this.money, typedOther.money);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetProduct()).compareTo(typedOther.isSetProduct());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetProduct()) {
            lastComparison = TBaseHelper.compareTo(this.product, typedOther.product);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetChannel()).compareTo(typedOther.isSetChannel());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetChannel()) {
            lastComparison = TBaseHelper.compareTo(this.channel, typedOther.channel);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetUserIp()).compareTo(typedOther.isSetUserIp());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUserIp()) {
            lastComparison = TBaseHelper.compareTo(this.userIp, typedOther.userIp);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetAddTime()).compareTo(typedOther.isSetAddTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAddTime()) {
            lastComparison = TBaseHelper.compareTo(this.addTime, typedOther.addTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDescription()) {
            lastComparison = TBaseHelper.compareTo(this.description, typedOther.description);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetQueryOrderAddr()).compareTo(typedOther.isSetQueryOrderAddr());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetQueryOrderAddr()) {
            lastComparison = TBaseHelper.compareTo(this.queryOrderAddr, typedOther.queryOrderAddr);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetSign()).compareTo(typedOther.isSetSign());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSign()) {
            lastComparison = TBaseHelper.compareTo(this.sign, typedOther.sign);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetDepositgbuid()).compareTo(typedOther.isSetDepositgbuid());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDepositgbuid()) {
            lastComparison = TBaseHelper.compareTo(this.depositgbuid, typedOther.depositgbuid);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(TProtocol iprot) throws TException {
        TField field;
        iprot.readStructBegin();
        while (true) {
            field = iprot.readFieldBegin();
            if (field.type == TType.STOP) {
                break;
            }
            switch (field.id) {
            case 1: // gbUID
                if (field.type == TType.I64) {
                    this.gbuid = iprot.readI64();
                    setgbuidIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 2: // ORDER_ID
                if (field.type == TType.STRING) {
                    this.orderId = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 3: // MONEY_TYPE
                if (field.type == TType.I32) {
                    this.moneyType = iprot.readI32();
                    setMoneyTypeIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 4: // MONEY
                if (field.type == TType.STRING) {
                    this.money = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 5: // PRODUCT
                if (field.type == TType.STRING) {
                    this.product = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 6: // CHANNEL
                if (field.type == TType.STRING) {
                    this.channel = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 7: // USER_IP
                if (field.type == TType.STRING) {
                    this.userIp = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 8: // ADD_TIME
                if (field.type == TType.STRING) {
                    this.addTime = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 9: // DESCRIPTION
                if (field.type == TType.STRING) {
                    this.description = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 10: // QUERY_ORDER_ADDR
                if (field.type == TType.STRING) {
                    this.queryOrderAddr = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 11: // SIGN
                if (field.type == TType.STRING) {
                    this.sign = iprot.readString();
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            case 12: // DEPOSIT_gbUID
                if (field.type == TType.I64) {
                    this.depositgbuid = iprot.readI64();
                    setDepositgbuidIsSet(true);
                } else {
                    TProtocolUtil.skip(iprot, field.type);
                }
                break;
            default:
                TProtocolUtil.skip(iprot, field.type);
            }
            iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked
        // in the validate method
        if (!isSetgbuid()) {
            throw new TProtocolException("Required field 'gbuid' was not found in serialized data! Struct: "
                    + toString());
        }
        if (!isSetMoneyType()) {
            throw new TProtocolException("Required field 'moneyType' was not found in serialized data! Struct: "
                    + toString());
        }
        validate();
    }

    public void write(TProtocol oprot) throws TException {
        validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(gbUID_FIELD_DESC);
        oprot.writeI64(this.gbuid);
        oprot.writeFieldEnd();
        if (this.orderId != null) {
            oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
            oprot.writeString(this.orderId);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(MONEY_TYPE_FIELD_DESC);
        oprot.writeI32(this.moneyType);
        oprot.writeFieldEnd();
        if (this.money != null) {
            oprot.writeFieldBegin(MONEY_FIELD_DESC);
            oprot.writeString(this.money);
            oprot.writeFieldEnd();
        }
        if (this.product != null) {
            oprot.writeFieldBegin(PRODUCT_FIELD_DESC);
            oprot.writeString(this.product);
            oprot.writeFieldEnd();
        }
        if (this.channel != null) {
            oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
            oprot.writeString(this.channel);
            oprot.writeFieldEnd();
        }
        if (this.userIp != null) {
            oprot.writeFieldBegin(USER_IP_FIELD_DESC);
            oprot.writeString(this.userIp);
            oprot.writeFieldEnd();
        }
        if (this.addTime != null) {
            oprot.writeFieldBegin(ADD_TIME_FIELD_DESC);
            oprot.writeString(this.addTime);
            oprot.writeFieldEnd();
        }
        if (this.description != null) {
            oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
            oprot.writeString(this.description);
            oprot.writeFieldEnd();
        }
        if (this.queryOrderAddr != null) {
            oprot.writeFieldBegin(QUERY_ORDER_ADDR_FIELD_DESC);
            oprot.writeString(this.queryOrderAddr);
            oprot.writeFieldEnd();
        }
        if (this.sign != null) {
            oprot.writeFieldBegin(SIGN_FIELD_DESC);
            oprot.writeString(this.sign);
            oprot.writeFieldEnd();
        }
        if (isSetDepositgbuid()) {
            oprot.writeFieldBegin(DEPOSIT_gbUID_FIELD_DESC);
            oprot.writeI64(this.depositgbuid);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AddMoneyRequest(");
        boolean first = true;

        sb.append("gbuid:");
        sb.append(this.gbuid);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("orderId:");
        if (this.orderId == null) {
            sb.append("null");
        } else {
            sb.append(this.orderId);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("moneyType:");
        sb.append(this.moneyType);
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("money:");
        if (this.money == null) {
            sb.append("null");
        } else {
            sb.append(this.money);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("product:");
        if (this.product == null) {
            sb.append("null");
        } else {
            sb.append(this.product);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("channel:");
        if (this.channel == null) {
            sb.append("null");
        } else {
            sb.append(this.channel);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("userIp:");
        if (this.userIp == null) {
            sb.append("null");
        } else {
            sb.append(this.userIp);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("addTime:");
        if (this.addTime == null) {
            sb.append("null");
        } else {
            sb.append(this.addTime);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("description:");
        if (this.description == null) {
            sb.append("null");
        } else {
            sb.append(this.description);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("queryOrderAddr:");
        if (this.queryOrderAddr == null) {
            sb.append("null");
        } else {
            sb.append(this.queryOrderAddr);
        }
        first = false;
        if (!first)
            sb.append(", ");
        sb.append("sign:");
        if (this.sign == null) {
            sb.append("null");
        } else {
            sb.append(this.sign);
        }
        first = false;
        if (isSetDepositgbuid()) {
            if (!first)
                sb.append(", ");
            sb.append("depositgbuid:");
            sb.append(this.depositgbuid);
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws TException {
        // check for required fields
        // alas, we cannot check 'gbuid' because it's a primitive and you chose
        // the non-beans generator.
        if (orderId == null) {
            throw new TProtocolException("Required field 'orderId' was not present! Struct: " + toString());
        }
        // alas, we cannot check 'moneyType' because it's a primitive and you
        // chose the non-beans generator.
        if (money == null) {
            throw new TProtocolException("Required field 'money' was not present! Struct: " + toString());
        }
        if (product == null) {
            throw new TProtocolException("Required field 'product' was not present! Struct: " + toString());
        }
        if (channel == null) {
            throw new TProtocolException("Required field 'channel' was not present! Struct: " + toString());
        }
        if (userIp == null) {
            throw new TProtocolException("Required field 'userIp' was not present! Struct: " + toString());
        }
        if (addTime == null) {
            throw new TProtocolException("Required field 'addTime' was not present! Struct: " + toString());
        }
        if (description == null) {
            throw new TProtocolException("Required field 'description' was not present! Struct: " + toString());
        }
        if (queryOrderAddr == null) {
            throw new TProtocolException("Required field 'queryOrderAddr' was not present! Struct: " + toString());
        }
        if (sign == null) {
            throw new TProtocolException("Required field 'sign' was not present! Struct: " + toString());
        }
    }

}

/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.guzhi.pay.thrift.udb.gen;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class MibaoQARes implements TBase<MibaoQARes, MibaoQARes._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("MibaoQARes");

  private static final TField RESCODE_FIELD_DESC = new TField("rescode", TType.I32, (short)1);
  private static final TField CNT_QA_FIELD_DESC = new TField("cntQA", TType.I32, (short)2);
  private static final TField FLAG_QA1_FIELD_DESC = new TField("flagQA1", TType.I32, (short)3);
  private static final TField FLAG_QA2_FIELD_DESC = new TField("flagQA2", TType.I32, (short)4);
  private static final TField FLAG_QA3_FIELD_DESC = new TField("flagQA3", TType.I32, (short)5);

  public int rescode;
  public int cntQA;
  public int flagQA1;
  public int flagQA2;
  public int flagQA3;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    RESCODE((short)1, "rescode"),
    CNT_QA((short)2, "cntQA"),
    FLAG_QA1((short)3, "flagQA1"),
    FLAG_QA2((short)4, "flagQA2"),
    FLAG_QA3((short)5, "flagQA3");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESCODE
          return RESCODE;
        case 2: // CNT_QA
          return CNT_QA;
        case 3: // FLAG_QA1
          return FLAG_QA1;
        case 4: // FLAG_QA2
          return FLAG_QA2;
        case 5: // FLAG_QA3
          return FLAG_QA3;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESCODE_ISSET_ID = 0;
  private static final int __CNTQA_ISSET_ID = 1;
  private static final int __FLAGQA1_ISSET_ID = 2;
  private static final int __FLAGQA2_ISSET_ID = 3;
  private static final int __FLAGQA3_ISSET_ID = 4;
  private BitSet __isset_bit_vector = new BitSet(5);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESCODE, new FieldMetaData("rescode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CNT_QA, new FieldMetaData("cntQA", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.FLAG_QA1, new FieldMetaData("flagQA1", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.FLAG_QA2, new FieldMetaData("flagQA2", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.FLAG_QA3, new FieldMetaData("flagQA3", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(MibaoQARes.class, metaDataMap);
  }

  public MibaoQARes() {
  }

  public MibaoQARes(
    int rescode,
    int cntQA,
    int flagQA1,
    int flagQA2,
    int flagQA3)
  {
    this();
    this.rescode = rescode;
    setRescodeIsSet(true);
    this.cntQA = cntQA;
    setCntQAIsSet(true);
    this.flagQA1 = flagQA1;
    setFlagQA1IsSet(true);
    this.flagQA2 = flagQA2;
    setFlagQA2IsSet(true);
    this.flagQA3 = flagQA3;
    setFlagQA3IsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MibaoQARes(MibaoQARes other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.rescode = other.rescode;
    this.cntQA = other.cntQA;
    this.flagQA1 = other.flagQA1;
    this.flagQA2 = other.flagQA2;
    this.flagQA3 = other.flagQA3;
  }

  public MibaoQARes deepCopy() {
    return new MibaoQARes(this);
  }

  @Override
  public void clear() {
    setRescodeIsSet(false);
    this.rescode = 0;
    setCntQAIsSet(false);
    this.cntQA = 0;
    setFlagQA1IsSet(false);
    this.flagQA1 = 0;
    setFlagQA2IsSet(false);
    this.flagQA2 = 0;
    setFlagQA3IsSet(false);
    this.flagQA3 = 0;
  }

  public int getRescode() {
    return this.rescode;
  }

  public MibaoQARes setRescode(int rescode) {
    this.rescode = rescode;
    setRescodeIsSet(true);
    return this;
  }

  public void unsetRescode() {
    __isset_bit_vector.clear(__RESCODE_ISSET_ID);
  }

  /** Returns true if field rescode is set (has been asigned a value) and false otherwise */
  public boolean isSetRescode() {
    return __isset_bit_vector.get(__RESCODE_ISSET_ID);
  }

  public void setRescodeIsSet(boolean value) {
    __isset_bit_vector.set(__RESCODE_ISSET_ID, value);
  }

  public int getCntQA() {
    return this.cntQA;
  }

  public MibaoQARes setCntQA(int cntQA) {
    this.cntQA = cntQA;
    setCntQAIsSet(true);
    return this;
  }

  public void unsetCntQA() {
    __isset_bit_vector.clear(__CNTQA_ISSET_ID);
  }

  /** Returns true if field cntQA is set (has been asigned a value) and false otherwise */
  public boolean isSetCntQA() {
    return __isset_bit_vector.get(__CNTQA_ISSET_ID);
  }

  public void setCntQAIsSet(boolean value) {
    __isset_bit_vector.set(__CNTQA_ISSET_ID, value);
  }

  public int getFlagQA1() {
    return this.flagQA1;
  }

  public MibaoQARes setFlagQA1(int flagQA1) {
    this.flagQA1 = flagQA1;
    setFlagQA1IsSet(true);
    return this;
  }

  public void unsetFlagQA1() {
    __isset_bit_vector.clear(__FLAGQA1_ISSET_ID);
  }

  /** Returns true if field flagQA1 is set (has been asigned a value) and false otherwise */
  public boolean isSetFlagQA1() {
    return __isset_bit_vector.get(__FLAGQA1_ISSET_ID);
  }

  public void setFlagQA1IsSet(boolean value) {
    __isset_bit_vector.set(__FLAGQA1_ISSET_ID, value);
  }

  public int getFlagQA2() {
    return this.flagQA2;
  }

  public MibaoQARes setFlagQA2(int flagQA2) {
    this.flagQA2 = flagQA2;
    setFlagQA2IsSet(true);
    return this;
  }

  public void unsetFlagQA2() {
    __isset_bit_vector.clear(__FLAGQA2_ISSET_ID);
  }

  /** Returns true if field flagQA2 is set (has been asigned a value) and false otherwise */
  public boolean isSetFlagQA2() {
    return __isset_bit_vector.get(__FLAGQA2_ISSET_ID);
  }

  public void setFlagQA2IsSet(boolean value) {
    __isset_bit_vector.set(__FLAGQA2_ISSET_ID, value);
  }

  public int getFlagQA3() {
    return this.flagQA3;
  }

  public MibaoQARes setFlagQA3(int flagQA3) {
    this.flagQA3 = flagQA3;
    setFlagQA3IsSet(true);
    return this;
  }

  public void unsetFlagQA3() {
    __isset_bit_vector.clear(__FLAGQA3_ISSET_ID);
  }

  /** Returns true if field flagQA3 is set (has been asigned a value) and false otherwise */
  public boolean isSetFlagQA3() {
    return __isset_bit_vector.get(__FLAGQA3_ISSET_ID);
  }

  public void setFlagQA3IsSet(boolean value) {
    __isset_bit_vector.set(__FLAGQA3_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESCODE:
      if (value == null) {
        unsetRescode();
      } else {
        setRescode((Integer)value);
      }
      break;

    case CNT_QA:
      if (value == null) {
        unsetCntQA();
      } else {
        setCntQA((Integer)value);
      }
      break;

    case FLAG_QA1:
      if (value == null) {
        unsetFlagQA1();
      } else {
        setFlagQA1((Integer)value);
      }
      break;

    case FLAG_QA2:
      if (value == null) {
        unsetFlagQA2();
      } else {
        setFlagQA2((Integer)value);
      }
      break;

    case FLAG_QA3:
      if (value == null) {
        unsetFlagQA3();
      } else {
        setFlagQA3((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESCODE:
      return new Integer(getRescode());

    case CNT_QA:
      return new Integer(getCntQA());

    case FLAG_QA1:
      return new Integer(getFlagQA1());

    case FLAG_QA2:
      return new Integer(getFlagQA2());

    case FLAG_QA3:
      return new Integer(getFlagQA3());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESCODE:
      return isSetRescode();
    case CNT_QA:
      return isSetCntQA();
    case FLAG_QA1:
      return isSetFlagQA1();
    case FLAG_QA2:
      return isSetFlagQA2();
    case FLAG_QA3:
      return isSetFlagQA3();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MibaoQARes)
      return this.equals((MibaoQARes)that);
    return false;
  }

  public boolean equals(MibaoQARes that) {
    if (that == null)
      return false;

    boolean this_present_rescode = true;
    boolean that_present_rescode = true;
    if (this_present_rescode || that_present_rescode) {
      if (!(this_present_rescode && that_present_rescode))
        return false;
      if (this.rescode != that.rescode)
        return false;
    }

    boolean this_present_cntQA = true;
    boolean that_present_cntQA = true;
    if (this_present_cntQA || that_present_cntQA) {
      if (!(this_present_cntQA && that_present_cntQA))
        return false;
      if (this.cntQA != that.cntQA)
        return false;
    }

    boolean this_present_flagQA1 = true;
    boolean that_present_flagQA1 = true;
    if (this_present_flagQA1 || that_present_flagQA1) {
      if (!(this_present_flagQA1 && that_present_flagQA1))
        return false;
      if (this.flagQA1 != that.flagQA1)
        return false;
    }

    boolean this_present_flagQA2 = true;
    boolean that_present_flagQA2 = true;
    if (this_present_flagQA2 || that_present_flagQA2) {
      if (!(this_present_flagQA2 && that_present_flagQA2))
        return false;
      if (this.flagQA2 != that.flagQA2)
        return false;
    }

    boolean this_present_flagQA3 = true;
    boolean that_present_flagQA3 = true;
    if (this_present_flagQA3 || that_present_flagQA3) {
      if (!(this_present_flagQA3 && that_present_flagQA3))
        return false;
      if (this.flagQA3 != that.flagQA3)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(MibaoQARes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    MibaoQARes typedOther = (MibaoQARes)other;

    lastComparison = Boolean.valueOf(isSetRescode()).compareTo(typedOther.isSetRescode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRescode()) {
      lastComparison = TBaseHelper.compareTo(this.rescode, typedOther.rescode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCntQA()).compareTo(typedOther.isSetCntQA());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCntQA()) {
      lastComparison = TBaseHelper.compareTo(this.cntQA, typedOther.cntQA);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFlagQA1()).compareTo(typedOther.isSetFlagQA1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlagQA1()) {
      lastComparison = TBaseHelper.compareTo(this.flagQA1, typedOther.flagQA1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFlagQA2()).compareTo(typedOther.isSetFlagQA2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlagQA2()) {
      lastComparison = TBaseHelper.compareTo(this.flagQA2, typedOther.flagQA2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFlagQA3()).compareTo(typedOther.isSetFlagQA3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlagQA3()) {
      lastComparison = TBaseHelper.compareTo(this.flagQA3, typedOther.flagQA3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // RESCODE
          if (field.type == TType.I32) {
            this.rescode = iprot.readI32();
            setRescodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // CNT_QA
          if (field.type == TType.I32) {
            this.cntQA = iprot.readI32();
            setCntQAIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // FLAG_QA1
          if (field.type == TType.I32) {
            this.flagQA1 = iprot.readI32();
            setFlagQA1IsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // FLAG_QA2
          if (field.type == TType.I32) {
            this.flagQA2 = iprot.readI32();
            setFlagQA2IsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // FLAG_QA3
          if (field.type == TType.I32) {
            this.flagQA3 = iprot.readI32();
            setFlagQA3IsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(RESCODE_FIELD_DESC);
    oprot.writeI32(this.rescode);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CNT_QA_FIELD_DESC);
    oprot.writeI32(this.cntQA);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(FLAG_QA1_FIELD_DESC);
    oprot.writeI32(this.flagQA1);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(FLAG_QA2_FIELD_DESC);
    oprot.writeI32(this.flagQA2);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(FLAG_QA3_FIELD_DESC);
    oprot.writeI32(this.flagQA3);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MibaoQARes(");
    boolean first = true;

    sb.append("rescode:");
    sb.append(this.rescode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cntQA:");
    sb.append(this.cntQA);
    first = false;
    if (!first) sb.append(", ");
    sb.append("flagQA1:");
    sb.append(this.flagQA1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("flagQA2:");
    sb.append(this.flagQA2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("flagQA3:");
    sb.append(this.flagQA3);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

